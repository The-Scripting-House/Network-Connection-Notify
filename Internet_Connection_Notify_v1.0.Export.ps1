#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: aa00cebd-87dd-4b83-bccc-ad54d8463d1d
# Source File: Internet_Connection_Notify_v1.0.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
0ISuQ6gBzzwsPvwfIhR/xSbLAQA=#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2017 v5.4.142
     Generated on:       3/16/2022 7:58 PM
     Generated by:       kbz.user
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2017
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-Internet_Connection_Notify_v1_0_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Speech, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35')
	[void][reflection.assembly]::Load('System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formNetworkConnectivityN = New-Object 'System.Windows.Forms.Form'
	$buttonClearLog = New-Object 'System.Windows.Forms.Button'
	$toolstripstatus = New-Object 'System.Windows.Forms.StatusStrip'
	$tabcontrol1 = New-Object 'System.Windows.Forms.TabControl'
	$tabpageEndpoint = New-Object 'System.Windows.Forms.TabPage'
	$groupboxLogging = New-Object 'System.Windows.Forms.GroupBox'
	$checkboxAutoScroll = New-Object 'System.Windows.Forms.CheckBox'
	$richtextboxLog = New-Object 'System.Windows.Forms.RichTextBox'
	$buttonExportLog = New-Object 'System.Windows.Forms.Button'
	$groupboxEndpoint = New-Object 'System.Windows.Forms.GroupBox'
	$labelCheckType = New-Object 'System.Windows.Forms.Label'
	$comboboxCheckType = New-Object 'System.Windows.Forms.ComboBox'
	$comboboxTolerantPercent = New-Object 'System.Windows.Forms.ComboBox'
	$labelTolerantPercent = New-Object 'System.Windows.Forms.Label'
	$comboboxTieBreaker = New-Object 'System.Windows.Forms.ComboBox'
	$labelTiebreaker = New-Object 'System.Windows.Forms.Label'
	$textboxEndpointURL = New-Object 'System.Windows.Forms.TextBox'
	$labelEndpoint = New-Object 'System.Windows.Forms.Label'
	$labelInterval = New-Object 'System.Windows.Forms.Label'
	$comboboxInterval = New-Object 'System.Windows.Forms.ComboBox'
	$textboxEndpointPort = New-Object 'System.Windows.Forms.TextBox'
	$labelTCPPort = New-Object 'System.Windows.Forms.Label'
	$tabpageVoice = New-Object 'System.Windows.Forms.TabPage'
	$groupboxVoice = New-Object 'System.Windows.Forms.GroupBox'
	$labelUnstableText = New-Object 'System.Windows.Forms.Label'
	$textboxVoiceUnstable = New-Object 'System.Windows.Forms.TextBox'
	$buttonPlayUnstable = New-Object 'System.Windows.Forms.Button'
	$labelVolume = New-Object 'System.Windows.Forms.Label'
	$comboboxVoiceVolume = New-Object 'System.Windows.Forms.ComboBox'
	$textboxVoiceConnected = New-Object 'System.Windows.Forms.TextBox'
	$checkboxVoiceEnabled = New-Object 'System.Windows.Forms.CheckBox'
	$labelConnectedText = New-Object 'System.Windows.Forms.Label'
	$labelVoice = New-Object 'System.Windows.Forms.Label'
	$buttonPlayConnected = New-Object 'System.Windows.Forms.Button'
	$labelDisconnectedText = New-Object 'System.Windows.Forms.Label'
	$textboxVoiceDisconnected = New-Object 'System.Windows.Forms.TextBox'
	$buttonPlayDisconnected = New-Object 'System.Windows.Forms.Button'
	$labelSpeed = New-Object 'System.Windows.Forms.Label'
	$comboboxVoiceType = New-Object 'System.Windows.Forms.ComboBox'
	$domainupdownVoiceSpeed = New-Object 'System.Windows.Forms.DomainUpDown'
	$labelVoiceType = New-Object 'System.Windows.Forms.Label'
	$tabpageNotify = New-Object 'System.Windows.Forms.TabPage'
	$groupboxPopup = New-Object 'System.Windows.Forms.GroupBox'
	$buttonPopupUnstable = New-Object 'System.Windows.Forms.Button'
	$textboxPopupUnstable = New-Object 'System.Windows.Forms.TextBox'
	$labelUnstableEnterText = New-Object 'System.Windows.Forms.Label'
	$checkboxPopupEnabled = New-Object 'System.Windows.Forms.CheckBox'
	$textboxMessageTitle = New-Object 'System.Windows.Forms.TextBox'
	$labelMessageTitle = New-Object 'System.Windows.Forms.Label'
	$buttonPopupDisconnected = New-Object 'System.Windows.Forms.Button'
	$buttonPopupConnected = New-Object 'System.Windows.Forms.Button'
	$textboxPopupDisconnected = New-Object 'System.Windows.Forms.TextBox'
	$labelDisconnectedEnterTex = New-Object 'System.Windows.Forms.Label'
	$textboxPopupConnected = New-Object 'System.Windows.Forms.TextBox'
	$labelEnterTextToNotifyWhe = New-Object 'System.Windows.Forms.Label'
	$tabpageAbout = New-Object 'System.Windows.Forms.TabPage'
	$linklabelWebsite = New-Object 'System.Windows.Forms.LinkLabel'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$richtextboxChangedHistory = New-Object 'System.Windows.Forms.RichTextBox'
	$labelAuthorPhyoWaiPaingLa = New-Object 'System.Windows.Forms.Label'
	$buttonStop = New-Object 'System.Windows.Forms.Button'
	$buttonStart = New-Object 'System.Windows.Forms.Button'
	$tooltip1 = New-Object 'System.Windows.Forms.ToolTip'
	$toolstripstatus1 = New-Object 'System.Windows.Forms.ToolStripStatusLabel'
	$labelUnstableEnterTextToS = New-Object 'System.Windows.Forms.Label'
	$buttonTestPlay = New-Object 'System.Windows.Forms.Button'
	$notifyicon1 = New-Object 'System.Windows.Forms.NotifyIcon'
	$savefiledialogExport = New-Object 'System.Windows.Forms.SaveFileDialog'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	<#
	The powershell script using the winform that will notify the user by voice / desktop notification when the network connection is changed.
	Written in Powershell Studio 2017.
	Last Release Date : 16.Mar.2022
	Version :
		v1.0 : 16.Mar.2022 : Initial Release
	#>
	
	#region Script Variables
	$Script:textboxEndpointURLName = 'dns.google'
	$Script:textboxEndpointPortValue = 53
	$Script:DefaultVolume = 100;
	$DefaultEmptyVoiceTextConnected = 'Internet is connected'
	$DefaultEmptyVoiceTextDisconnected = 'Internet is disconnected'
	$DefaultEmptyVoiceTextUnstable = 'Connection is not stable'
	
	$ConnectedEmptyDefaultNotifyMesssageTitleText = 'Connection Information'
	$ConnectedEmptyDefaultNotifyText = 'Internet is connected'
	$DisconnectedEmptyDefaultNotifyText = 'Internet is disconnected'
	$UnstableEmptyDefaultNotifyText = 'Connection is not stable'
	$Script:ConnectionTimeout = 2000;
	
	$VerbosePreference = "Continue"
	#endregion
	
	#region All Functions are put here
	#region Function: Form Icon
	function GetIcon
	{
		param ([string]$iconBase64)
		$iconBytes = [Convert]::FromBase64String($iconBase64)
		$stream = New-Object IO.MemoryStream($iconBytes, 0, $iconBytes.Length)
		$stream.Write($iconBytes, 0, $iconBytes.Length);
		$iconImage = [System.Drawing.Image]::FromStream($stream, $true)
		return $iconImage
	}
	
	#endregion Function: Form Icon
	
	#region Function: TCP Check
	function Test-Port
	{
		param ([string]$Hostname,
			[int]$Port,
			[int]$Timeout)
		$Socket = New-Object Net.Sockets.TcpClient
		$IAsyncResult = [IAsyncResult]$Socket.BeginConnect($Hostname, $Port, $null, $null)
		$success = $iasyncresult.AsyncWaitHandle.WaitOne($Timeout, $true)
		$Connected = $Socket.connected
		$Socket.Close()
		$Socket.Dispose()
		Return $Connected
	}
	#endregion Function: TCP Check
	
	#region Function: Connected Play
	function Play-Connected
	{
		$script:ObjSpeak.selectVoice($comboboxVoiceType.SelectedItem)
		$script:ObjSpeak.Rate = $domainupdownVoiceSpeed.SelectedItem
		$script:ObjSpeak.Volume = [int]$comboboxVoiceVolume.SelectedItem.Replace('%', '')
		$script:ObjSpeak.Speak($textboxVoiceConnected.Text);
	}
	#endregion Function: Connected Play
	
	#region Function: Disconnected Play
	function Play-Disconnected
	{
		$script:ObjSpeak.selectVoice($comboboxVoiceType.SelectedItem)
		$script:ObjSpeak.Rate = $domainupdownVoiceSpeed.SelectedItem
		$script:ObjSpeak.Volume = [int]$comboboxVoiceVolume.SelectedItem.Replace('%', '')
		$script:ObjSpeak.Speak($textboxVoiceDisconnected.Text);
	}
	#endregion Function: Disconnected Play
	
	#region Function: Disconnected Play
	function Play-Unstable
	{
		$script:ObjSpeak.selectVoice($comboboxVoiceType.SelectedItem)
		$script:ObjSpeak.Rate = $domainupdownVoiceSpeed.SelectedItem
		$script:ObjSpeak.Volume = [int]$comboboxVoiceVolume.SelectedItem.Replace('%', '')
		$script:ObjSpeak.Speak($textboxVoiceUnstable.Text);
	}
	#endregion Function: Disconnected Play
	
	#region Function: Enable or Disable all controls during execution (except the Stop Button & Minimize to Tray)
	function Enable-Disable-AllControls
	{
		param ([bool]$Flag)
		$textboxEndpointURL.Enabled = $Flag;
		$textboxEndpointPort.Enabled = $Flag;
		$comboboxTolerantPercent.Enabled = $Flag;
		$comboboxTieBreaker.Enabled = $Flag;
		$comboboxInterval.Enabled = $Flag;
		$comboboxCheckType.Enabled = $Flag;
		$comboboxVoiceType.Enabled = $Flag;
		$domainupdownVoiceSpeed.Enabled = $Flag;
		$comboboxVoiceVolume.Enabled = $Flag;
		$checkboxVoiceEnabled.Enabled = $Flag;
		$textboxVoiceConnected.Enabled = $Flag;
		$textboxVoiceDisconnected.Enabled = $Flag;
		$buttonPlayConnected.Enabled = $Flag;
		$buttonPlayDisconnected.Enabled = $Flag;
		$textboxVoiceUnstable.Enabled = $Flag;
		$buttonPlayUnstable.Enabled = $Flag;
		$textboxMessageTitle.Enabled = $Flag;
		$textboxPopupConnected.Enabled = $Flag;
		$textboxPopupDisconnected.Enabled = $Flag;
		$textboxPopupUnstable.Enabled = $Flag;
		$checkboxPopupEnabled.Enabled = $Flag;
		$buttonPopupConnected.Enabled = $Flag;
		$buttonPopupDisconnected.Enabled = $Flag;
		$buttonPopupUnstable.Enabled = $Flag;
	}
	#endregion Function: Enable or Disable all controls during execution (except the Stop Button & Minimize to Tray)
	
	#endregion All Functions are put here
	
	#region Tab Page: Endpoint Settings & Logging
	#region Form Load: Set Hostname, Port, Voice Type, Voice Speed during form load
	$formNetworkConnectivityN_Load = {
		
		## Set Hostname & Port & template as default ##
		$textboxEndpointURL.Text = $Script:textboxEndpointURLName
		$textboxEndpointPort.Text = $Script:textboxEndpointPortValue
		$comboboxCheckType.SelectedIndex = 0;
		
		## Set default text for Connected Voice Textbox ##
		$textboxVoiceConnected.Text = $DefaultEmptyVoiceTextConnected
		## Set default text for Disconnected Voice Textbox ##
		$textboxVoiceDisconnected.Text = $DefaultEmptyVoiceTextDisconnected
		## Set default text for Unstable Voice Textbox ##
		$textboxVoiceUnstable.Text = $DefaultEmptyVoiceTextUnstable
		
		## Set default message for Connected Notify Textbox ##
		$textboxMessageTitle.Text = $ConnectedEmptyDefaultNotifyMesssageTitleText
		## Set default text for Connected Notify Textbox ##
		$textboxPopupConnected.Text = $ConnectedEmptyDefaultNotifyText
		## Set default text for Disconnected Notify Textbox ##
		$textboxPopupDisconnected.Text = $DisconnectedEmptyDefaultNotifyText
		## Set default text for Unstable Notify Textbox ##
		$textboxPopupUnstable.Text = $UnstableEmptyDefaultNotifyText
		
		## Set the default value for the Tolerant % ##
		$comboboxTolerantPercent.SelectedItem = [string]$Script:DefaultTolerantPercent
		
		## Set the default value for Tiebreaker Count ##
		$comboboxTieBreaker.SelectedItem = [string]$Script:DefaultTieBreakerCount
		
		## Set the default value for Interval Count ##
		$comboboxInterval.SelectedItem = [string]$Script:DefaultIntervalCount_sec
		
		## Prepare the voice object & add to combo box##
		Add-Type -AssemblyName System.Speech
		$Script:ObjSpeak = [System.Speech.Synthesis.SpeechSynthesizer]::new()
		$Script:InstalledVoiceNames = $ObjSpeak.GetInstalledVoices().VoiceInfo.Name
		$InstalledVoiceNames | % {
			$comboboxVoiceType.Items.Add($_)
		}
		$comboboxVoiceType.SelectedIndex = 0;
		$comboboxVoiceVolume.SelectedIndex = 0;
		
		## Set the voice speed ##
		10 .. -10 | % {
			$domainupdownVoiceSpeed.Items.Add($_)
		}
		$domainupdownVoiceSpeed.SelectedItem = 0;
	}
	#endregion Form Load: Set Hostname, Port, Voice Type, Voice Speed during form load
	
	#region Event: Textbox Edit mode for Endpoint URL
	$textboxEndpointURL_Click = {
		$textboxEndpointURL.SelectAll();
	}
	#endregion Event: Textbox Edit mode for Endpoint URL
	
	#region Event: Textbox Edit mode Exit for Endpoint UR
	$textboxEndpointURL_Leave = {
		If ($textboxEndpointURL.Text.Trim().Length -eq 0)
		{
			$textboxEndpointURL.Text = $script:textboxEndpointURLName
		}
	}
	#endregion Event: Textbox Edit mode Exit for Endpoint UR
	
	#region Event: Textbox Edit mode for Endpoint Port
	$textboxEndpointPort_Click = {
		$textboxEndpointPort.SelectAll();
	}
	#endregion Event: Textbox Edit mode for Endpoint Port
	
	#region Event: Textbox Edit mode Exit for Endpoint Port
	$textboxEndpointPort_Leave = {
		If ($textboxEndpointPort.Text.Trim().Length -eq 0)
			{
			$textboxEndpointPort.Text = $script:textboxEndpointURLName
			}
	}
	#endregion Event: Textbox Edit mode Exit for Endpoint Port
	
	
	#region Tooltips: Endpoint Setting
	$labelEndpoint_MouseHover = {
		$tooltip1.SetToolTip($labelEndpoint, "The URL or IP Address that `nthe connection check will perform.")
	}
	
	$labelTCPPort_MouseHover = {
		$tooltip1.SetToolTip($labelTCPPort, "The port number that the `nconnection check will perform.")
	}
	
	$labelTiebreaker_MouseHover = {
		$tooltip1.SetToolTip($labelTiebreaker, "The number of connections after which `nit will be decided to be a success or failed `nconnection (overall). The default is $TieBreakerCount TCP `nconnections: meaning that if you failed `nto established all $TieBreakerCount subsequent connection, `nthen the overall result is 'Failed'.")
	}
	
	$comboboxTieBreaker_MouseHover = {
		$tooltip1.SetToolTip($comboboxTieBreaker, "The number of connections after which `nit will be decided to be a success or failed `nconnection (overall). The default is $TieBreakerCount TCP `nconnections: meaning that if you failed `nto established all $TieBreakerCount subsequent connection, `nthen the overall result is 'Failed'.")
	}
	
	$labelCheckType_MouseHover = {
		$tooltip1.SetToolTip($labelCheckType, "Based on these templates, the value of the `nTieBreaker, Interval, Tolerant Percent will changed.")
	}
	
	$labelInterval_MouseHover = {
		$tooltip1.SetToolTip($labelInterval, "The number of second between each sequential `nTCP connection attempts. Please be aware that `nyou might be getting blocked by the destination `nserver/ISP if you set the lower value. Default is $DefaultIntervalCount_sec sec.")
	}
	
	$comboboxInterval_MouseHover = {
		$tooltip1.SetToolTip($comboboxInterval, "The number of second between each sequential `nTCP connection attempts. Please be aware that `nyou might be getting blocked by the destination `nserver/ISP if you set the lower value. Default is $DefaultIntervalCount_sec sec.")
	}
	
	$labelTolerantPercent_MouseHover = {
		$tooltip1.SetToolTip($labelTolerantPercent, "The percentage of ignored unsucessful connections `nto be decided as a successful overall connection. `nEg: 20% means 1 unsuccessful connection can be `ntolerated with 4 successful connections to decide the `noverall connection to be success.")
	}
	
	$comboboxTolerantPercent_MouseHover = {
		$tooltip1.SetToolTip($comboboxTolerantPercent, "The percentage of ignored unsucessful connections `nto be decided as a successful overall connection. `nEg: 20% means 1 unsuccessful connection can be `ntolerated with 4 successful connections to decide the `noverall connection to be success.")
	}
	
	#endregion Tooltips: Endpoint Setting
	
	#region combobox Check Type
	$comboboxCheckType_SelectedIndexChanged = {
		switch ($comboboxCheckType.SelectedIndex)
		{
			0 {
				$comboboxTieBreaker.SelectedItem = [string]'3'
				$comboboxTolerantPercent.SelectedItem = [string]'20%'
				$comboboxInterval.SelectedItem = [string]'5'
			}
			1 {
				$comboboxTieBreaker.SelectedItem = [string]'2'
				$comboboxTolerantPercent.SelectedItem = [string]'0%'
				$comboboxInterval.SelectedItem = [string]'3'
			}
			2 {
				$comboboxTieBreaker.SelectedItem = [string]'1'
				$comboboxTolerantPercent.SelectedItem = [string]'0%'
				$comboboxInterval.SelectedItem = [string]'3'
			}
			3 {
				$comboboxTieBreaker.SelectedItem = [string]'1'
				$comboboxTolerantPercent.SelectedItem = [string]'0%'
				$comboboxInterval.SelectedItem = [string]'1'
			}
			default
			{
				$comboboxTieBreaker.SelectedItem = [string]'3'
				$comboboxTolerantPercent.SelectedItem = [string]'20%'
				$comboboxInterval.SelectedItem = [string]'5'
			}
		}
	}
	
	#endregion combobox Check Type
	
	#region checkbox: Log Auto-Scroll
	$richtextboxLog_TextChanged = {
		If ($checkboxAutoScroll.Checked -eq $true)
		{
			$richtextboxLog.ScrollToCaret();
		}
	}
	#endregion checkbox: Log Auto-Scroll
	
	#region button: Clear Log
	$buttonClearLog_Click = {
		$richtextboxLog.Text = ""
	}
	#endregion button: Clear Log
	
	#region button: Export Log
	$buttonExportLog_Click = {
		$savefiledialogExport.Title = "Save Log to:";
		$savefiledialogExport.Filter = "txt files (*.txt)|*.txt|All files (*.*)|*.*";
		$savefiledialogExport.FileName = "Connection Log"
		$savefiledialogExport.ShowDialog();
	}
	#endregion button: Export Log
	
	#region SaveFileDialogue: Export Log
	$savefiledialogExport_FileOk = [System.ComponentModel.CancelEventHandler]{
		#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
		$richtextboxLog.Text | Out-File -FilePath $savefiledialogExport.FileName;
	}
	#endregion SaveFileDialogue: Export Log
	#endregion Tab Page: Endpoint Settings & Logging
	
	#region Tab Page: Voice Settings
	$Script:btnStopClicked = $false; ## Intially set the button Stop click flag to False
	
	#region Checkbox changed for Voice Enabled/Disabled
	$checkboxVoiceEnabled_CheckedChanged = {
		If ($checkboxVoiceEnabled.Checked -eq $true)
			{
				$comboboxVoiceType.Enabled = $true;
				$domainupdownVoiceSpeed.Enabled = $true;
				$comboboxVoiceVolume.Enabled = $true;
				$textboxVoiceConnected.Enabled = $true;
				$textboxVoiceDisconnected.Enabled = $true;
				$textboxVoiceUnstable.Enabled = $true;
				$buttonPlayConnected.Enabled = $true;
				$buttonPlayDisconnected.Enabled = $true;
				$buttonPlayUnstable.Enabled = $true;
			}
		else
			{
				$comboboxVoiceType.Enabled = $false;
				$domainupdownVoiceSpeed.Enabled = $false;
				$comboboxVoiceVolume.Enabled = $false;
				$textboxVoiceConnected.Enabled = $false;
				$textboxVoiceDisconnected.Enabled = $false;
				$textboxVoiceUnstable.Enabled = $false;
				$buttonPlayConnected.Enabled = $false;
				$buttonPlayDisconnected.Enabled = $false;
				$buttonPlayUnstable.Enabled = $false;
			}
	}
	#endregion Checkbox changed for Voice Enabled/Disabled
	
	#region Control Helper Functions
	function Show-NotifyIcon
	{
	<#
		.SYNOPSIS
			Displays a NotifyIcon's balloon tip message in the taskbar's notification area.
		
		.DESCRIPTION
			Displays a NotifyIcon's a balloon tip message in the taskbar's notification area.
			
		.PARAMETER NotifyIcon
	     	The NotifyIcon control that will be displayed.
		
		.PARAMETER BalloonTipText
	     	Sets the text to display in the balloon tip.
		
		.PARAMETER BalloonTipTitle
			Sets the Title to display in the balloon tip.
		
		.PARAMETER BalloonTipIcon	
			The icon to display in the ballon tip.
		
		.PARAMETER Timeout	
			The time the ToolTip Balloon will remain visible in milliseconds. 
			Default: 0 - Uses windows default.
	#>
		 param(
		  [Parameter(Mandatory = $true, Position = 0)]
		  [ValidateNotNull()]
		  [System.Windows.Forms.NotifyIcon]$NotifyIcon,
		  [Parameter(Mandatory = $true, Position = 1)]
		  [ValidateNotNullOrEmpty()]
		  [String]$BalloonTipText,
		  [Parameter(Position = 2)]
		  [String]$BalloonTipTitle = '',
		  [Parameter(Position = 3)]
		  [System.Windows.Forms.ToolTipIcon]$BalloonTipIcon = 'None',
		  [Parameter(Position = 4)]
		  [int]$Timeout = 0
	 	)
		
		if($null -eq $NotifyIcon.Icon)
		{
			#Set a Default Icon otherwise the balloon will not show
			$NotifyIcon.Icon = [System.Drawing.Icon]::ExtractAssociatedIcon([System.Windows.Forms.Application]::ExecutablePath)
		}
		
		$NotifyIcon.ShowBalloonTip($Timeout, $BalloonTipTitle, $BalloonTipText, $BalloonTipIcon)
	}
	
	
	
	
	function Update-ComboBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ComboBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ComboBox control.
		
		.PARAMETER ComboBox
			The ComboBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ComboBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER Append
			Adds the item(s) to the ComboBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ComboBox $combobox1 "Red" -Append
			Update-ComboBox $combobox1 "White" -Append
			Update-ComboBox $combobox1 "Blue" -Append
		
		.EXAMPLE
			Update-ComboBox $combobox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ComboBox]
			$ComboBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]
			$DisplayMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$ComboBox.Items.Clear()
		}
		
		if ($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$ComboBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$ComboBox.Items.Add($obj)
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)
		}
		
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	function Update-ListViewColumnSort
	{
	<#
		.SYNOPSIS
			Sort the ListView's item using the specified column.
		
		.DESCRIPTION
			Sort the ListView's item using the specified column.
			This function uses Add-Type to define a class that sort the items.
			The ListView's Tag property is used to keep track of the sorting.
		
		.PARAMETER ListView
			The ListView control to sort.
		
		.PARAMETER ColumnIndex
			The index of the column to use for sorting.
		
		.PARAMETER SortOrder
			The direction to sort the items. If not specified or set to None, it will toggle.
		
		.EXAMPLE
			Update-ListViewColumnSort -ListView $listview1 -ColumnIndex 0
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListView]
			$ListView,
			[Parameter(Mandatory = $true)]
			[int]
			$ColumnIndex,
			[System.Windows.Forms.SortOrder]
			$SortOrder = 'None'
		)
		
		if (($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
		{
			return;
		}
		
		#region Define ListViewItemComparer
		try
		{
			[ListViewItemComparer] | Out-Null
		}
		catch
		{
			Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@ | Out-Null
		}
		#endregion
		
		if ($ListView.Tag -is [ListViewItemComparer])
		{
			#Toggle the Sort Order
			if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
			{
				if ($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
				{
					$ListView.Tag.sortOrder = 'Descending'
				}
				else
				{
					$ListView.Tag.sortOrder = 'Ascending'
				}
			}
			else
			{
				$ListView.Tag.sortOrder = $SortOrder
			}
			
			$ListView.Tag.column = $ColumnIndex
			$ListView.Sort() #Sort the items
		}
		else
		{
			if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
			{
				$SortOrder = [System.Windows.Forms.SortOrder]::Ascending
			}
			
			#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
			$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder)
			$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
		}
	}
	
	
	function Add-ListViewItem
	{
	<#
		.SYNOPSIS
			Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.
	
		.DESCRIPTION
			Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.
	
		.PARAMETER ListView
			The ListView control to add the items to.
	
		.PARAMETER Items
			The object or objects you wish to load into the ListView's Items collection.
			
		.PARAMETER  ImageIndex
			The index of a predefined image in the ListView's ImageList.
		
		.PARAMETER  SubItems
			List of strings to add as Subitems.
		
		.PARAMETER Group
			The group to place the item(s) in.
		
		.PARAMETER Clear
			This switch clears the ListView's Items before adding the new item(s).
		
		.EXAMPLE
			Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
	#>
		
		Param( 
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.ListView]$ListView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Items,
		[int]$ImageIndex = -1,
		[string[]]$SubItems,
		$Group,
		[switch]$Clear)
		
		if($Clear)
		{
			$ListView.Items.Clear();
	    }
	    
	    $lvGroup = $null
	    if ($Group -is [System.Windows.Forms.ListViewGroup])
	    {
	        $lvGroup = $Group
	    }
	    elseif ($Group -is [string])
	    {
	        #$lvGroup = $ListView.Group[$Group] # Case sensitive
	        foreach ($groupItem in $ListView.Groups)
	        {
	            if ($groupItem.Name -eq $Group)
	            {
	                $lvGroup = $groupItem
	                break
	            }
	        }
	        
	        if ($null -eq $lvGroup)
	        {
	            $lvGroup = $ListView.Groups.Add($Group, $Group)
	        }
	    }
	    
		if($Items -is [Array])
		{
			$ListView.BeginUpdate()
			foreach ($item in $Items)
			{		
				$listitem  = $ListView.Items.Add($item.ToString(), $ImageIndex)
				#Store the object in the Tag
				$listitem.Tag = $item
				
				if($null -ne $SubItems)
				{
					$listitem.SubItems.AddRange($SubItems)
				}
				
				if($null -ne $lvGroup)
				{
					$listitem.Group = $lvGroup
				}
			}
			$ListView.EndUpdate()
		}
		else
		{
			#Add a new item to the ListView
			$listitem  = $ListView.Items.Add($Items.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $Items
			
			if($null -ne $SubItems)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if($null -ne $lvGroup)
			{
				$listitem.Group = $lvGroup
			}
		}
	}
	
	#endregion
	
	#region Event: Textbox Edit mode for Connected Voice
	$textboxVoiceConnected_Click={
		If ($textboxVoiceConnected.Text -eq $DefaultEmptyVoiceTextConnected)
			{
				$textboxVoiceConnected.SelectAll();
			}
	}
	#endregion Event: Textbox Edit mode for Connected Voice
	
	#region Event: Textbox Edit mode for Disconnected Voice
	$textboxVoiceDisconnected_Click = {
		If ($textboxVoiceDisconnected.Text -eq $DefaultEmptyVoiceTextDisconnected)
		{
			$textboxVoiceDisconnected.SelectAll();
		}
	}
	#endregion Event: Textbox Edit mode for Disconnected Voice
	
	#region Event: Textbox Edit mode for Unstable Voice
	$textboxVoiceUnstable_Click = {
		If ($textboxVoiceUnstable.Text -eq $DefaultEmptyVoiceTextUnstable)
		{
			$textboxVoiceUnstable.SelectAll();
		}
	}
	#endregion Event: Textbox Edit mode for Unstable Voice
	
	#region Event: Textbox Exit mode for Connected Voice
	$textboxVoiceConnected_Leave={
		If ($textboxVoiceConnected.Text.Trim().Length -eq 0)
			{
				$textboxVoiceConnected.Text = $DefaultEmptyVoiceTextConnected
			}
	}
	#endregion Event: Textbox Exit mode for Connected Voice
	
	#region Event: Textbox Exit mode for Disconnected Voice
	$textboxVoiceDisconnected_Leave = {
		If ($textboxVoiceDisconnected.Text.Trim().Length -eq 0)
		{
			$textboxVoiceDisconnected.Text = $DefaultEmptyVoiceTextDisconnected
		}
	}
	#endregion Event: Textbox Exit mode for Disconnected Voice
	
	#region Event: Textbox Exit mode for Unstable Voice
	$textboxVoiceUnstable_Leave = {
		If ($textboxVoiceUnstable.Text.Trim().Length -eq 0)
		{
			$textboxVoiceUnstable.Text = $DefaultEmptyVoiceTextUnstable
		}
	}
	#endregion Event: Textbox Exit mode for Unstable Voice
	
	#region Event: Click Action for Button Play Connected
	$buttonPlayConnected_Click = {
		Play-Connected -ObjSpeak $ObjSpeak
	}
	#endregion Event: Click Action for Button Play Connected
	
	#region Event: Click Action for Button Play Disconnected
	$buttonPlayDisconnected_Click = {
		Play-Disconnected -ObjSpeak $ObjSpeak
	}
	#endregion Event: Click Action for Button Play Disconnected
	
	#region Event: Click Action for Button Play Unstable
	$buttonPlayUnstable_Click = {
		Play-Unstable -ObjSpeak $ObjSpeak
	}
	#endregion Event: Click Action for Button Play Unstable
	
	
	
	#endregion Tab Page: Voice Settings
	
	#region Tab Page: Notify Settings
	
	#region Checkbox for Pop-up Enabled/Disabled
	$checkboxPopupEnabled_CheckedChanged = {
		If ($checkboxPopupEnabled.Checked -eq $true)
			{
				$textboxMessageTitle.Enabled = $true;
				$textboxPopupConnected.Enabled = $true;
				$textboxPopupDisconnected.Enabled = $true;
				$textboxPopupUnstable.Enabled = $true;
				$buttonPopupConnected.Enabled = $true;
				$buttonPopupDisconnected.Enabled = $true;
				$buttonPopupUnstable.Enabled = $true;
			}
		else
			{
				$textboxMessageTitle.Enabled = $false;
				$textboxPopupConnected.Enabled = $false;
				$textboxPopupDisconnected.Enabled = $false;
				$textboxPopupUnstable.Enabled = $false;
				$buttonPopupConnected.Enabled = $false;
				$buttonPopupDisconnected.Enabled = $false;
				$buttonPopupUnstable.Enabled = $false;
			}
		
	}
	#endregion Checkbox for Pop-up Enabled/Disabled
	
	#region Notify Setting Tooltips
	$buttonPopupConnected_MouseHover = {
		$tooltip1.SetToolTip($buttonPopupConnected, "If you didn't see the notification, please `ncheck the Windows Notification Settings.")
	}
	
	$buttonPopupDisconnected_MouseHover = {
		$tooltip1.SetToolTip($buttonPopupDisconnected, "If you didn't see the notification, please `ncheck the Windows Notification Settings.")
	}
	
	$buttonPopupUnstable_MouseHover = {
		$tooltip1.SetToolTip($buttonPopupConnected, "If you didn't see the notification, please `ncheck the Windows Notification Settings.")
	}
	#endregion Notify Setting Tooltips
	
	#region Event: Textbox Edit mode for Notify Title
	$textboxMessageTitle_Click = {
		If ($textboxMessageTitle.Text -eq $ConnectedEmptyDefaultNotifyMesssageTitleText)
		{
			$textboxMessageTitle.SelectAll();
		}
	}
	#endregion Event: Textbox Edit mode for Notify Title
	
	#region Event: Textbox Edit mode for Connected Notify Text
	$textboxPopupConnected_Click = {
		If ($textboxPopupConnected.Text -eq $ConnectedEmptyDefaultNotifyText)
		{
			$textboxPopupConnected.SelectAll();
		}
	}
	#endregion Event: Textbox Edit mode for Connected Notify Text
	
	#region Event: Textbox Edit mode for Disconnected Notify Text
	$textboxPopupDisconnected_Click = {
		If ($textboxPopupDisconnected.Text -eq $DisconnectedEmptyDefaultNotifyText)
		{
			$textboxPopupDisconnected.SelectAll();
		}
		
	}
	#endregion Event: Textbox Edit mode for Disconnected Notify Text
	
	#region Event: Textbox Edit mode for Unstable Notify Text
	$textboxPopupUnstable_Click = {
		If ($textboxPopupUnstable.Text -eq $UnstableEmptyDefaultNotifyText)
		{
			$textboxPopupUnstable.SelectAll();
		}
	}
	#endregion Event: Textbox Edit mode for Unstable Notify Text
	
	#region Event: Textbox Exit mode for Connected Notify Title
	$textboxMessageTitle_Leave = {
		If ($textboxMessageTitle.Text.Trim().Length -eq 0)
		{
			$textboxMessageTitle.Text = $ConnectedEmptyDefaultNotifyMesssageTitleText
		}
	}
	#endregion Event: Textbox Exit mode for Connected Notify Title
	
	#region Event: Textbox Exit mode for Connected Notify Text
	$textboxPopupConnected_Leave = {
		If ($textboxPopupConnected.Text.Trim().Length -eq 0)
		{
			$textboxPopupConnected.Text = $ConnectedEmptyDefaultNotifyText
		}
	}
	
	#endregion Event: Textbox Exit mode for Connected Notify Text
	
	#region Event: Textbox Exit mode for Disconnected Notify Text
	$textboxPopupDisconnected_Leave = {
		If ($textboxPopupDisconnected.Text.Trim().Length -eq 0)
		{
			$textboxPopupDisconnected.Text = $DisconnectedEmptyDefaultNotifyText
		}
	}
	#endregion Event: Textbox Exit mode for Disconnected Notify Text
	
	#region Event: Textbox Exit mode for Unstable Notify Text
	$textboxPopupUnstable_Leave = {
		If ($textboxPopupUnstable.Text.Trim().Length -eq 0)
		{
			$textboxPopupUnstable.Text = $UnstableEmptyDefaultNotifyText
		}
		
	}
	#endregion Event: Textbox Exit mode for Unstable Notify Text
	
	#region Click Action for Connected Notify Button Test Play
	$buttonPopupConnected_Click = {
		Show-NotifyIcon -BalloonTipTitle $textboxMessageTitle.Text -BalloonTipText $textboxPopupConnected.Text -NotifyIcon $notifyicon1 -BalloonTipIcon Info
	}
	#endregion
	
	#region Click Action for Disconnected Notify Button Test Play
	$buttonPopupDisconnected_Click = {
		Show-NotifyIcon -BalloonTipTitle $textboxMessageTitle.Text -BalloonTipText $textboxPopupDisconnected.Text -NotifyIcon $notifyicon1 -BalloonTipIcon Warning
	}
	#endregion Click Action for Disconnected Notify Button Test Play
	
	#region Click Action for Unstable Notify Button Test Play
	$buttonPopupUnstable_Click = {
		Show-NotifyIcon -BalloonTipTitle $textboxMessageTitle.Text -BalloonTipText $textboxPopupUnstable.Text -NotifyIcon $notifyicon1 -BalloonTipIcon Warning
	}
	#endregion Click Action for Unstable Notify Button Test Play
	
	#endregion Tab Page: Notify Settings
	
	#region Click Action for Start Monitoring Button
	$buttonStart_Click = {
		$Script:btnStopClicked = $false;
		$buttonStart.Enabled = $false;
		$PreviousConnectionState = 'NotConnected'
		Enable-Disable-AllControls -Flag $false;
		
		## Added stopwatch to adjust the sleep duration whether it's success or failed (to accomodate with 1sec duration) ##
		#$stopwatch = [system.diagnostics.stopwatch]::StartNew()
		$toolstripstatus1.Image = $null;
		$toolstripstatus1.Text = "Performing $($comboboxTieBreaker.selectedItem) sequential checks. Please wait..."
			
		## Function: which will test the connecitivity according to the $TieBreakerCount retries ##
		function Test-OverallConnection
			{ 
				param ([int]$TieBreakerCount,[int]$SleepTimeBetweenConnections_s)
			
				Write-Verbose "$(get-date) : Connection check started."
				$richtextboxLog.AppendText("$(get-date) : Connection check started.`n")
				$Script:TieBreakerOriginal = $TieBreakerCount
				$TotalTime_s = $TieBreakerCount * $SleepTimeBetweenConnections_s
				$Script:ConnectionResultsArray = new-object bool[] $Script:TieBreakerCount ## Create the 3 element array with $False value
				$Script:i = 0; ## Counter to fill up the 3 cells of $Script:ConnectionResultsArray
				$Script:LineUnstableFirstTime = $false;	## Check if it's the first time to detect the line unstablility (in the time breaker interval)
				$Script:LineBroughtUpFromUnstableState = $false;	## Flag to store if the connection gets stable from unstable stage
				$Script:PreviousConnectionState = $null;
			
				Add-Type -AssemblyName system.windows.forms
				$script:Timer = [System.Windows.Forms.Timer]::new()
				$Timer.Interval = $SleepTimeBetweenConnections_s * 1000; ## the delay for each timer tick, in milliseconds
				$Timer.add_Tick(
							{
								## Test conection & put the result into the array, let's say the tie breker count is 5, then it will put into the [0..4] cells of the array 
								If (Test-Port -Hostname $textboxEndpointURL.Text -Port $([int]$textboxEndpointPort.Text) -Timeout $Script:ConnectionTimeout)
									{
										$Script:ConnectionResultsArray[$($Script:i % $Script:TieBreakerCount)] = $True;
										Write-Verbose "Time now After Success $i : $($stopwatch.Elapsed) -------------------"
										$richtextboxLog.AppendText("$(Get-Date) : Connected to destination.`n")
									}
								else
									{
										$Script:ConnectionResultsArray[$($i % $Script:TieBreakerCount)] = $false;
										Write-Verbose "Time now After Failed/Disconnect $i : $($stopwatch.Elapsed) -------------------"
										$richtextboxLog.AppendText("$(Get-Date) : Cannot connect to destination.`n")
									}
					
								$Script:i++;	## Put $i increment only here after the connection result is put into array & to prevent the wrong  decision when $i is 0 (ie: 0/1)
					
								## Make decision at every timebreaker interval ##
								If (($Script:i % $Script:TieBreakerCount) -eq 0)
									{
									Write-Verbose "Decision Started. Number of ConnectionResultArray cell are $(($Script:ConnectionResultsArray).Count) with $($Script:ConnectionResultsArray)"
									$TotalConnectionResultCount = ($Script:ConnectionResultsArray).Count
									$NumberOfConnectionResultFailureCount = ($Script:ConnectionResultsArray | ? { $_ -eq $false }).Count
									## If the connection result contains both success and failure, then check for the unstability ##
										If ($Script:ConnectionResultsArray -contains $true -and $Script:ConnectionResultsArray -contains $false)
											{
												If ($Script:LineUnstableFirstTime -eq $false)
													{
														$script:LineUnstableFirstTime = $true; ## Mark line is unstability is found for the first time
														Write-Verbose "Unstable for the 1st time. Time Breaker & Interval Changed and contiue monitoring **************** "
														$Timer.Stop();
														$Script:TieBreakerCount_Old = $Script:TieBreakerCount;
														$Script:TieBreakerCount = [int](([math]::log($Script:TieBreakerCount_Old, 3)) * 5) ## To increase the tie breaker count according to Log(n,3)
														$Script:ConnectionResultsArray = new-object bool[] $Script:TieBreakerCount ## Increase the number of cells
														$Timer.Interval = 1 * 1000; ## Just set the timer interval to 1 sec
														Write-Verbose "Time Breaker Now is $Script:TieBreakerCount"
														$richtextboxLog.AppendText("$(Get-Date) : Slight connection lost found in the 1st phase. Deep checking for next $Script:TieBreakerCount seconds.`n")
														$script:i = 0;
														$Timer.Start();
													}
												## Let's ignore the failed connections if the actual failed count is less than the tolerant count ##
												elseif (($NumberOfConnectionResultFailureCount/$TotalConnectionResultCount * 100) -gt $([int]$comboboxTolerantPercent.SelectedItem.Replace('%', '')))
													{
														#$Script:LineUnstableFirstTime = $false;
														$Script:LineBroughtUpFromUnstableState = $true;
												Write-Verbose "Line is unstable."
												If ($btnStopClicked -ne $true)
													{
														$toolstripstatus1.Text = "Not Stable";
														$toolstripstatus1.Image = GetIcon -iconBase64 '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'
													}
								
														$richtextboxLog.AppendText("$(Get-Date) : Overall connection check result -> Unstable.`n")
								
														## Change the TieBreaker Count & Interval again ##
														$Timer.Stop();
														$Script:TieBreakerCount_Old = $Script:TieBreakerCount;
														$Script:TieBreakerCount = [int](([math]::log($Script:TieBreakerCount_Old, 3)) * 5) ## To increase the tie breaker count according to Log(n,3)
														$Script:ConnectionResultsArray = new-object bool[] $Script:TieBreakerCount ## Increase the number of cells
														$Timer.Interval = 1 * 1000; ## Just set the timer interval to 1 sec
														Write-Verbose "Time Breaker Now is $Script:TieBreakerCount"
														$script:i = 0;
														$Timer.Start();
								
														## Pop-up the message only if the state changed from Disconnected to Connected and checkbox is enabled for Pop-up ##
														If (($Script:PreviousConnectionState -eq 'Connected') -or ($Script:PreviousConnectionState -eq 'Disconnected'))
															{
																If ($checkboxPopupEnabled.Checked)
																	{
																		Write-Verbose "Pop-up for unstable ...."
																		Show-NotifyIcon -BalloonTipTitle $textboxMessageTitle.Text -BalloonTipText $textboxPopupUnstable.Text -NotifyIcon $notifyicon1 -BalloonTipIcon Warning
																	}
	
																If ($checkboxVoiceEnabled.Checked)
																	{
																		Write-Verbose "Voice Out for unstable ...."
																		Play-Unstable
																	}
																$Script:PreviousConnectionState = 'Unstable'
															}
	
														## Speakout only if the state changed from Disconnected to Connected and checkbox is enabled for voice ##
														If (($Script:PreviousConnectionState -eq 'Connected') -or ($Script:PreviousConnectionState -eq 'Disconnected') -and $checkboxVoiceEnabled.Checked)
															{
																Write-Verbose "Voice Out for unstable ...."
																Play-Unstable
																$Script:PreviousConnectionState = 'Unstable'
															}
													}
												else
													{
														## As the failed count is less than the tolerant count, then re-insert the original values for probing ##
														$Script:LineUnstableFirstTime = $false;
														Write-Verbose "Failed Count is tolerable."
														$richtextboxLog.AppendText("$(Get-Date) : Connection failed count still in the tolerable range. Setting back the monitoring values to original values.`n")
														$Timer.Stop();
														Write-Verbose "Going to re-input the old TieBreaker"
														$Script:TieBreakerCount = $Script:TieBreakerOriginal; ## Set the TieBreaker to original value
														$Script:ConnectionResultsArray = new-object bool[] $Script:TieBreakerCount ## Increase the number of cells
														$Timer.Interval = $SleepTimeBetweenConnections_s * 1000;
														$Script:i = 0;
														$Timer.Start();
														
													}
											}
												## If the connection only contains Failure, we'll further check line instaliblity or disconnect 
										elseIf ($Script:ConnectionResultsArray -Notcontains $True -and ($NumberOfConnectionResultFailureCount/$TotalConnectionResultCount * 100) -gt $([int]$comboboxTolerantPercent.SelectedItem.Replace('%', '')) )
											{
											## If the connection was unstable once or just in the pre-check state, then re-insert the original values for probing ##
											If ($Script:LineUnstableFirstTime -eq $true -or $Script:LineBroughtUpFromUnstableState -eq $true)
												{
													Write-Verbose "Come from unstable state or pre-check state"
													$Timer.Stop();
													Write-Verbose "Going to re-input the old TieBreaker"
													$richtextboxLog.AppendText("$(Get-Date) : Just a slight connection lost found in 1st phase check. Now resuming to monitor with original values.`n")
													$Script:TieBreakerCount = $Script:TieBreakerOriginal; ## Set the TieBreaker to original value
													$Script:ConnectionResultsArray = new-object bool[] $Script:TieBreakerCount ## Increase the number of cells
													$Timer.Interval = $SleepTimeBetweenConnections_s * 1000;
													$Script:i = 0;
													$Timer.Start();
												}
	
											$Script:LineUnstableFirstTime = $false;
											$Script:LineBroughtUpFromUnstableState = $false;
											If ($Script:btnStopClicked -ne $true)
												{
													$toolstripstatus1.Text = "Disconnected"
													$toolstripstatus1.Image = GetIcon -iconBase64 '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'
												}
							
											$richtextboxLog.AppendText("$(Get-Date) : Overall connection check result -> Failed.`n")
											## Speak or Pop-up if the state changed from Connected to Disconnected ##
											If ($Script:PreviousConnectionState -ne 'Disconnected')
												{
													If ($checkboxPopupEnabled.Checked)
													{
														Write-Verbose "Pop-up for Disconnected ...."
														Show-NotifyIcon -BalloonTipTitle $textboxMessageTitle.Text -BalloonTipText $textboxPopupDisconnected.Text -NotifyIcon $notifyicon1 -BalloonTipIcon Warning
													}
													If ($checkboxVoiceEnabled.Checked)
														{
															Write-Verbose "Voice Out for Disconnected ...."
															Play-Disconnected
														}
													$Script:PreviousConnectionState = 'Disconnected'
												}
											}
										## If the connection only contains success, we'll further check line instaliblity or disconnect 
										elseif ($Script:ConnectionResultsArray -Notcontains $False)
											{
												## If the line was unstable once, then re-insert the original values for probing ##
												If ($Script:LineUnstableFirstTime -eq $true -or $Script:LineBroughtUpFromUnstableState -eq $true)
													{
														Write-Verbose "Come from unstable state or pre-check state"
														$Timer.Stop();
														Write-Verbose "Going to re-input the old TieBreaker"
														$Script:TieBreakerCount = $Script:TieBreakerOriginal;	## Set the TieBreaker to original value
														$Script:ConnectionResultsArray = new-object bool[] $Script:TieBreakerCount ## Increase the number of cells
														$Timer.Interval = $SleepTimeBetweenConnections_s * 1000;
														$script:i = 0;
														$Timer.Start();
													}
												$Script:LineUnstableFirstTime = $false;
												$Script:LineBroughtUpFromUnstableState = $false;
												If ($Script:btnStopClicked -ne $true)
													{
														$toolstripstatus1.Text = "Connected"
														$toolstripstatus1.Image = GetIcon -iconBase64 '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'
													}
							
												$richtextboxLog.AppendText("$(Get-Date) : Overall connection check result -> Success.`n")
												## Speak or Pop-up if the state changed from Disconnected to Connected ##
												If ($Script:PreviousConnectionState -ne 'Connected')
													{
													If ($checkboxPopupEnabled.Checked)
														{
															Write-Verbose "Pop-up for Connected ...."
															Show-NotifyIcon -BalloonTipTitle $textboxMessageTitle.Text -BalloonTipText $textboxPopupConnected.Text -NotifyIcon $notifyicon1 -BalloonTipIcon Info
														}
													If ($checkboxVoiceEnabled.Checked)
														{
															Write-Verbose "Voice Out for Connected ...."
															Play-Connected
														}
														$Script:PreviousConnectionState = 'Connected'
													}
											}
										else
											{
											# Nothing to do with it.
											}
					}
					
					If ($Script:btnStopClicked -eq $True )
									{
										$Timer.Stop()
										$buttonStart.Enabled = $True;
									}
								
								}
							)
				$Timer.Enabled = $true
				$Timer.Start()
				$Script:stopwatch = [system.diagnostics.stopwatch]::StartNew()
				Return $Script:ConnectionResultsArray
			}
	
		
	## Set the TieBreaker Count & Interval Count before making the connection loop ##
	$Script:TieBreakerCount = [int]$comboboxTieBreaker.SelectedItem
	$Script:SleepTimeBetweenConnections_s = [int]$comboboxInterval.SelectedItem
		
	$OverConnectionResult = Test-OverallConnection -TieBreakerCount $TieBreakerCount -SleepTimeBetweenConnections_s $Script:SleepTimeBetweenConnections_s;
		
	}
	#endregion Click Action for Start Monitoring Button
	
	#region Click Action for Stop Monitoring Button
	$buttonStop_Click={
		$Script:btnStopClicked = $true;
		$buttonStart.Enabled = $true;
		Enable-Disable-AllControls -Flag $true;
		$toolstripstatus1.Text = $toolstripstatus1.Image = $null
		$buttonStop.Parent.Focus();	## set focus to parent
	}
	#endregion Click Action for Stop Monitoring Button
	
	#region Tab Page: About Settings
	$linklabelWebsite_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
		[system.Diagnostics.Process]::start($linklabelWebsite.Text)
	}
	
	
	#endregion Tab Page: About Settings
	
	#region Event: Form Close and delete notify icon
	$formNetworkConnectivityN_FormClosed=[System.Windows.Forms.FormClosedEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.FormClosedEventArgs]
		$notifyicon1.Dispose()
	}
	#endregion Event: Form Close and delete notify icon
	
	
	
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formNetworkConnectivityN.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonClearLog.remove_Click($buttonClearLog_Click)
			$richtextboxLog.remove_TextChanged($richtextboxLog_TextChanged)
			$buttonExportLog.remove_Click($buttonExportLog_Click)
			$labelCheckType.remove_MouseHover($labelCheckType_MouseHover)
			$comboboxCheckType.remove_SelectedIndexChanged($comboboxCheckType_SelectedIndexChanged)
			$comboboxTolerantPercent.remove_MouseHover($comboboxTolerantPercent_MouseHover)
			$labelTolerantPercent.remove_MouseHover($labelTolerantPercent_MouseHover)
			$comboboxTieBreaker.remove_MouseHover($comboboxTieBreaker_MouseHover)
			$labelTiebreaker.remove_MouseHover($labelTiebreaker_MouseHover)
			$textboxEndpointURL.remove_Click($textboxEndpointURL_Click)
			$textboxEndpointURL.remove_Leave($textboxEndpointURL_Leave)
			$labelEndpoint.remove_MouseHover($labelEndpoint_MouseHover)
			$labelInterval.remove_MouseHover($labelInterval_MouseHover)
			$comboboxInterval.remove_MouseHover($comboboxInterval_MouseHover)
			$textboxEndpointPort.remove_Click($textboxEndpointPort_Click)
			$textboxEndpointPort.remove_Leave($textboxEndpointPort_Leave)
			$labelTCPPort.remove_MouseHover($labelTCPPort_MouseHover)
			$textboxVoiceUnstable.remove_Click($textboxVoiceUnstable_Click)
			$textboxVoiceUnstable.remove_Leave($textboxVoiceUnstable_Leave)
			$buttonPlayUnstable.remove_Click($buttonPlayUnstable_Click)
			$textboxVoiceConnected.remove_Click($textboxVoiceConnected_Click)
			$textboxVoiceConnected.remove_Leave($textboxVoiceConnected_Leave)
			$checkboxVoiceEnabled.remove_CheckedChanged($checkboxVoiceEnabled_CheckedChanged)
			$buttonPlayConnected.remove_Click($buttonPlayConnected_Click)
			$textboxVoiceDisconnected.remove_Click($textboxVoiceDisconnected_Click)
			$textboxVoiceDisconnected.remove_Leave($textboxVoiceDisconnected_Leave)
			$buttonPlayDisconnected.remove_Click($buttonPlayDisconnected_Click)
			$buttonPopupUnstable.remove_Click($buttonPopupUnstable_Click)
			$buttonPopupUnstable.remove_MouseHover($buttonPopupUnstable_MouseHover)
			$textboxPopupUnstable.remove_Click($textboxPopupUnstable_Click)
			$textboxPopupUnstable.remove_Leave($textboxPopupUnstable_Leave)
			$checkboxPopupEnabled.remove_CheckedChanged($checkboxPopupEnabled_CheckedChanged)
			$textboxMessageTitle.remove_Click($textboxMessageTitle_Click)
			$textboxMessageTitle.remove_Leave($textboxMessageTitle_Leave)
			$buttonPopupDisconnected.remove_Click($buttonPopupDisconnected_Click)
			$buttonPopupDisconnected.remove_MouseHover($buttonPopupDisconnected_MouseHover)
			$buttonPopupConnected.remove_Click($buttonPopupConnected_Click)
			$buttonPopupConnected.remove_MouseHover($buttonPopupConnected_MouseHover)
			$textboxPopupDisconnected.remove_Click($textboxPopupDisconnected_Click)
			$textboxPopupDisconnected.remove_Leave($textboxPopupDisconnected_Leave)
			$textboxPopupConnected.remove_Click($textboxPopupConnected_Click)
			$textboxPopupConnected.remove_Leave($textboxPopupConnected_Leave)
			$linklabelWebsite.remove_LinkClicked($linklabelWebsite_LinkClicked)
			$buttonStop.remove_Click($buttonStop_Click)
			$buttonStart.remove_Click($buttonStart_Click)
			$formNetworkConnectivityN.remove_FormClosed($formNetworkConnectivityN_FormClosed)
			$formNetworkConnectivityN.remove_Load($formNetworkConnectivityN_Load)
			$savefiledialogExport.remove_FileOk($savefiledialogExport_FileOk)
			$formNetworkConnectivityN.remove_Load($Form_StateCorrection_Load)
			$formNetworkConnectivityN.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formNetworkConnectivityN.SuspendLayout()
	$toolstripstatus.SuspendLayout()
	$tabcontrol1.SuspendLayout()
	$tabpageEndpoint.SuspendLayout()
	$groupboxLogging.SuspendLayout()
	$groupboxEndpoint.SuspendLayout()
	$tabpageVoice.SuspendLayout()
	$groupboxVoice.SuspendLayout()
	$tabpageNotify.SuspendLayout()
	$groupboxPopup.SuspendLayout()
	$tabpageAbout.SuspendLayout()
	$groupbox1.SuspendLayout()
	#
	# formNetworkConnectivityN
	#
	$formNetworkConnectivityN.Controls.Add($buttonClearLog)
	$formNetworkConnectivityN.Controls.Add($toolstripstatus)
	$formNetworkConnectivityN.Controls.Add($tabcontrol1)
	$formNetworkConnectivityN.Controls.Add($buttonStop)
	$formNetworkConnectivityN.Controls.Add($buttonStart)
	$formNetworkConnectivityN.AutoScaleDimensions = '6, 13'
	$formNetworkConnectivityN.AutoScaleMode = 'Font'
	$formNetworkConnectivityN.BackColor = 'Control'
	$formNetworkConnectivityN.BackgroundImageLayout = 'Zoom'
	$formNetworkConnectivityN.ClientSize = '335, 398'
	#region Binary Data
	$formNetworkConnectivityN.Icon = [System.Convert]::FromBase64String('
AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAMMOAADDDgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAGOCrQBjgq0AZYOpD2OCqzdig6xuY4OtoWSErctkha/jY4Sx82OEsf1jhLH9Y4Wy82SFsuNo
hq7LaYaroWaFrG5jhK83YYSxD1+ItwBghrQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABhgq0AYYKtBGKCrSpigq5yZoSrumeFq+dkgqj7Xnqe/1Zujv9NY37/
SFt2/0RXcP9FV3D/SV13/05kgf9XcZH/XXuh/2GDrvtjhrLnZYWwumWFrHJjg6wqYoSsBGKErAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZIOrAGWDqgNigq0wYoOukGOEsN9gf6r9U26Q
/z9Raf8uOUn/Iys2/yMrNv8mLzv/KDI+/ys2Q/8sNkP/KTI9/ycvOf8kKzX/Iyw3/y07Tf8/VG7/
WHGU/2WDqf1lha/fZIWukGSErjBmha4DZYWuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFh8qgBkg7IAX4CsGGGB
rXxjg6/gXn2n/0hfff8rN0f/ISkz/y04Rv89S13/RVRo/0JQY/87Sl7/NERb/zJCWf8yQln/Nkdd
/z5NY/9IVWj/SVhr/z5MXv8tN0T/Iikz/y46SP9LYoD/YYCo/2aGsOBlha58ZIWuGGmGqQBehLUA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAXYGtAFmBsQJggKs9ZYOqvWCBqfxJYoP/KDNB/yQsNv87Sln/RlNi/zVDVv8nNEf/KDRH/zE/
Uf85SFz/PU9n/0RWbf9HWXD/QFJq/zRGXv8uPFP/KTNF/yw4Rv89TGD/Rlx2/zhKYf8hKjT/KzZE
/09pi/9kha/8aYetvWmGqz1jgrECZ4WtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABkg6oAZ4OoBV6CrF9hg63gWXSa/zJAVP8gKDL/N0pf/z1Rav8q
NUr/KDNG/z9OZP9YbIj/ZX2e/2aEqf9lha3/ZIWu/2WFr/9kha7/ZIWu/2SErv9kgqz/X3ug/1Bn
hf85SmD/JzND/zdCUv9NYHb/Okpf/x8nMf83SF3/Xnyh/2eHr+Bnha1fZoWtBWeFrQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZ/qQBnfqgIZIKpcmKErO9Paoz/
Iy05/yk2Rv9EVXH/MzhI/y02Rf9KX33/Xn2m/2OEr/9jhK7/YoOt/2KDrf9ig63/Y4Os/2KCq/9i
gqv/Y4Os/2ODrP9nhav/Zoav/2OGtP9lh7L/Y3ud/0VYcP8nNUX/N0dd/01gev8sNUD/JTA+/1Vx
lf9ph7DvaIaucmqHrghphq4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAX4Cu
AF2BrQVigK1yYoGt8khgfv8eJS7/OUZa/zlLZP8hLDf/P1Vp/2F/ov9mha3/Y4Ks/2KCrP9jg6z/
YYOt/2GDr/9ihK//ZISt/2SErf9jg6z/ZISt/2SErf9jhLD/ZoWu/2mGrP9ohqz/ZIax/2SHtP9h
fZ3/PEpe/ykzQ/9OYX3/OEZY/yMqNP9Taon/aYew8mmGr3Jlha4FZoauAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABkgqoAbYalAWGBq2Bgga7vRl19/x0jK/9BUGL/N0RW/yUyPv9Ma5D/YYSu
/2KEq/9eg6z/ZISq/2eFqf9mhKr/ZIOr/2ODrf9jhK3/ZISt/2SErf9khK3/ZISt/2SErf9lha7/
Zoau/2aFrv9nha//Z4av/2WFr/9mh7D/a4er/1Bhe/8nMEH/SVpz/0BPY/8fJi7/UWiG/2mHsO9o
hq9gZ4i4AWiHsQAAAAAAAAAAAAAAAAAAAAAAAAAAAGCAqgBlgqkAY4KqPmaEquBRaIr/HSQt/0BR
ZP8zQFP/KzhN/1t4nP9nhaz/YYOt/2CCrf9mg6r/YoOt/2CDr/9hg67/Y4Ot/2SErP9khKz/ZISt
/2SErf9khK3/ZISt/2SErv9lha7/ZYWv/2aFrv9mha//ZoWv/2aFrv9mhq7/ZIaw/2eHs/9Xb5D/
JzJD/0ZZdf9BUWf/Iiky/1pzlf9qiLHgaYetPmSIsQBzhKgAAAAAAAAAAAAAAAAAAAAAAGCAqgBg
gKoZYYKsvVd1m/8kLTn/OEhc/zZGXP8uOUr/W3uk/2SErv9lhKn/XoOu/2CDrv9ng6z/Z4Ot/1+E
rv9ehLD/Z4St/2iFq/9khaz/Y4St/2ODrf9lhKz/Z4as/2WFrv9jhbD/ZYWv/2aFrv9lha7/ZYau
/2iGrP9lha//ZIWw/2iGrf9oibL/WnWU/ygxQf9NYHv/PEdW/ygyQP9gfqP/bIitvWyGrhlrhq4A
AAAAAAAAAAAAAAAAYIGrAF6CrQFggat8YH+o/DBAU/8rN0X/P1Bo/ygzRf9ceZ//Z4Sr/2SEq/9l
han/YoSr/2GDrv9mg6z/aIOr/2eFqP9mhqn/ZoSt/2WErv9iha7/YISw/2SErf9kha//Y4Wv/2iG
rP9ph6v/aYer/2mHqv9mhqz/Y4Wv/2SGrf9rhqr/aoer/2eGrv9mhq7/aoqx/1Ztjf8nMEH/UWiE
/yozP/87SV7/aoeu/GqHsHxnhrIBaYewAAAAAAAAAAAAYYGrAGGBqjBhgqzfSmF//yAnMf9BWHX/
Ji44/1dsiP9gg7D/YoKt/1yCsf9ihK//Z4et/1+Ds/9hhLL/YIS2/2OFr/9phqn/Z4at/2OGsv9l
h7D/aYar/2iGqv9jhK//YYa0/2iIsf9niLD/YYWx/2GGsP9mhq//Zoix/2WIsf9mhrD/Y4ax/2OI
tf9qibH/aYqx/2uKtP9LWnL/LDpP/1Vpgv8hJy//VmyL/2uJst9ph7AwaoewAAAAAABigqsAY4Kr
A2KCq5Bde6P/JzE+/z5MX/8sOlD/QU9k/2mFqP9egq//Y4Os/2KErP9Ubo//Slpv/1Rukf9Saor/
R1pz/1hylv9mhq//W3aV/0RVav9LXHH/YH2h/2OGsf9mhav/VmyH/0BRav9MYX3/ZYKn/2iIrv9i
eZb/R1hs/0pbcf9mf6L/Y4Gq/01ifv9MXXT/S1xy/1x0k/9nha3/Mj1O/0NYcP89TF7/LTdF/2aD
q/9qiLGQa4ivA2qHsABigqsAYoKrKmODrd5GXHj/JS03/0pYbv8nMUT/Xnuf/2ODrP9ig6z/ZYSn
/2WGq/9KYHz/Fhol/1Bkfv9HV27/Fx0h/1drif9eeqL/IS8+/zI8R/8lMET/Lj5U/2CDsP9XcJD/
HiUv/zI/Uv8fJjX/Sllz/2uHrf80RWH/LzdF/yMpMv88SmH/aIOp/y01P/8fKzv/LjpL/zxSbP9r
i7T/V3CN/yUxRf9bbIT/Iyky/09lg/9qibPeaYexKmiHsQBPfrgAYoOscl1+p/4oNEL/P05j/zI7
Sf9HWnb/Y4Su/1+Crv9mhKr/YYOs/1+EsP9cc5H/Fx4s/y8+Uv8sOEr/HiYs/2B+o/9LY4b/HSQt
/2mAnP9Ra47/ISQp/154nP9JXnj/JC05/2qGqf9AS1r/NkJU/2aIs/9Wa4n/NT9O/x0jMP9BU23/
bYuy/0BHUv8YIzX/QlJp/2N9n/9riaz/Z4ew/zZEWP9HVWr/PExi/zA8TP9phq/+a4mxcmqHsABy
hqEPZYWtuk1rj/8hKTP/Rlp2/ygyQP9jfZz/X4Kv/2KDrP9jg6z/X4Ku/2GEsP9acY7/GB8s/0ZU
Z/8/TFv/ISQp/1x6oP9Ua4v/GyIs/11wiv9MXnX/HiQt/2B7of9HW3L/JS42/2aEqP85SWD/NT9N
/2mHrv8xPEz/JSw3/0VUaP9YdJX/aIqy/zZEUv8nLzf/Q1Jn/1Zwkf9sia//aImy/11wiv8rNkr/
VWqI/yIpM/9dd5r/a4mzumiIsQ9ohqg3ZIWu5zdNZ/8xO0n/Okpg/zlJX/9ohav/X4Kv/2KDrP9j
g6z/ZYOq/2mFqf9GXHb/HCMs/0tgev9CVWz/FyIy/0lkiv9shKP/OkdZ/yArQP8kKzj/RlNo/2GC
sf8xRWD/Iyox/1Brjf8uO0//KTJB/2J+pP9IV2v/Iis4/yIsO/9LYIH/aIGk/yw1Rf8nKzP/Jy46
/0NZdf9ri7L/Z4ex/2uGqv8tOUz/UWWC/y02RP9IWnT/bIu052iIsTdmhqxuX4Gq+yg1Rf9EUmX/
LjhI/09nhP9jha//YIKu/2KDrf9jg6z/YYKt/1+Crv9gfaH/YHiX/1x8pf9beqP/XneZ/199p/9n
hq7/Z4Sq/1l1mf9ieJX/a4Wr/2aEsv9hfKD/YXqX/2KAqP9ke5z/W3mh/2WErf9ph6z/XnmY/1t5
nf9qh6z/Y4Wv/1p6oP9he5j/XXqb/2iDpf9oiLH/aYiw/2qKtP9AUWr/QFBl/0JSZv8zP1D/aoqx
+2qKsm5jhLChWXed/yIqNP9IXHf/KTJB/1x4nv9ig6//ZIOs/2ODrP9igqv/YIKu/2CDr/9mgqb/
X3qb/2WDqP9nhKr/YHia/2J/pv9gf6j/Xnui/2B/p/9ggKr/Xnqg/2qBo/9hfZ//Y4at/2WHsP9o
gaL/Xn2n/2eFrf9de6P/ZIOq/2Z/of9sg6T/aIKl/2iHs/9pg6X/ZX2e/2iFrP9nh7H/a4iu/2uK
s/9RaYn/Mj1N/1FmgP8mLzn/ZoSp/2uMtKFhhbHLT2uL/yMsN/9CWXj/LjhJ/2GAqv9jhK3/aIWp
/2SEq/9igqv/ZYSr/2aGrv9PZ4f/KjhK/0NZd/9NXnb/NURa/0hfff9OZIH/LThL/zxLYv9UbI3/
Lj9W/2Fzjf8lOFD/U22H/2mJrv9IXnz/P1Bn/2uGqP81Qlb/UmyQ/z5MYP8/T2L/NUVa/2J7mv83
Rlv/MjtJ/0ljh/9ribT/bYiu/22Krv9dep7/LDVD/1ZtjP8jKzT/XXia/2uMtctlhbLjR197/ycx
PP9BVXD/MkFV/2GErv9ghKr/ZIWp/2SDrf9igq//Y4Ou/2WFsP9NYn3/KDNB/0tigP88SVv/UmN4
/1Zxk/9VaYP/Jiw2/zlEVv9edJL/MEBV/2d7lf8nNUf/LztI/1huiP9BVHD/PEhb/2B9n/81RFT/
XHST/zlIXf8nMDz/MT5P/1xthP80QVX/SVZn/09oif9rirL/a4ew/22Jrv9ng6f/LTZG/1lui/8n
Lzn/U2uM/2yNuONlhbHzQVZw/yw4RP88T2r/OUle/2aGrv9hhan/YoWp/2SDrv9lg63/ZYSr/2iG
rP9VbIz/MkVg/1huiv9VbIv/NUVi/0legP9TaYf/NURY/0RceP9Sc5f/Ok1l/191kf85SFz/RlJi
/1puiP83SFz/OURS/1Fpi/9CUGb/WG+N/0FUbP9NXnf/PFBu/2F6mP8/VnT/N05o/197nf9qibD/
aoex/2uKr/9ph6z/LjpM/1Zriv8qMj3/TWOB/2yNufNkhLH9PVFp/y48Sf86TWj/PExh/2eGrv9h
har/YYSs/2GCr/9ig67/Y4Ss/2CDsP9mg6n/aYGi/2WDqv9lhKv/ZoGn/2SEsP9ig7D/aYSo/2eH
q/9hhq//ZYSu/2SEsf9ng6z/a4Wr/2WFsf9mhqn/a4en/2SDs/9thaz/Zoav/2eIrP9sia7/Z4av
/2iHsP9piK//aoeq/2uKrf9qia7/aomw/2mKr/9mia7/LjxO/1Vqif8tNUH/Sl97/2yNuf1lhbH9
PVFq/y88Sf87Tmn/PEth/2WFsP9ihKv/Z4et/2SErv9hgq//YoSu/2SErf8+T2f/KDE+/09pjP8s
OEn/OUdV/2qGpf9kha//ZoWu/2mGr/9qiLL/aIiy/2iIsv9pibL/aomx/2mJs/9oirL/aYqy/2qI
tv9xirD/a4qv/2eJr/9oh7D/aIex/2iIsf9qibD/a4it/2qJrv9riq//aomx/2mKr/9lh63/LDlL
/1lujf8tNUD/SV56/2yMuP1lhbHzQFZv/yw4RP8+U23/NEZb/2aFsP9hfp//TmR+/2V8nf9nhq7/
ZISu/2mFqv82R17/HCQy/1Nngv8hLD3/Lj1P/2mFp/9hhLL/YoW0/198ov9GXXz/Rlpz/0dacv9G
WnP/RVp0/0dbc/9HW3T/Rlp0/0pbc/9JW3P/WXKR/2iHsv9ph7H/aYew/2mHsP9piLD/aYiw/2mI
sP9qibD/a4ix/2yKr/9mg6j/KzdG/15zkf8qMjz/TWOB/2yNuPNkhbLjR198/yYxPP9FW3n/Lj1Q
/2qFrf9OaIn/DRUj/zE4R/9kfZ//ZIWw/2aErP9TaIP/R1dr/193lv9KW3T/UWJ9/2mEq/9mhbH/
ZoCg/zA5Rf8PERL/DxAR/xEQEP8PEBH/DRAR/w8REf8SEA//DQ8S/w8QEP8ODg3/LztM/2qGsP9p
iLH/aYiw/2mIsP9piLD/aIix/2iJsf9riLD/a4ix/22KsP9gfKH/KzRC/191lP8nLjj/VW2M/26O
t+NjhbHLUGuN/yIsN/9JYYD/KzRF/2N/pP9ffqf/NUVa/xEQEf8vOkn/YH6j/2SGrv8vPVH/ERUa
/0phf/8aHS3/KTBB/2iFrP9hf6j/MT1O/xEPEf8REBL/ERER/xEREf8RERH/ERER/xEREf8SERD/
ERAR/w8PEP8bHST/WWyE/2mJs/9qibD/aomw/2qJsP9qibD/aomw/2uJr/9ria//bIqv/2uLsv9U
cJP/LzlG/1x0kv8jKjT/Xnma/26Ntctlha6hWnie/yEqNP9NYnz/KjND/1Nxmf9nhaz/Z4Gj/zhF
Vf8REBL/MDxM/15+pv9LY4H/QFBh/1x0lP9EU23/TV12/2mBof8wQVf/DxAS/xQRD/8QEBP/ERER
/xEREf8RERH/ERER/xEREf8QERL/FhEL/xgYGf9KYX//aYmz/2yJrv9qibD/aomw/2qJsP9qibD/
aomw/2uJr/9nibH/bYqt/22Ms/9GXHj/OkZY/1RphP8nLzr/Z4Sp/22NtKFnhKtuYYGp+yk2Rf9G
VWn/NEBT/0FZe/9nha7/Z4Ws/2OBqP81RFj/EhAR/zI8Sv9ogp//aomv/2CEs/9siK//boWk/zdD
Vf8QERP/ExAO/xMREP8SERH/ERER/xEREf8RERH/ERER/xEREf8REBD/EhMW/0lXav9pibL/ZIe1
/2qJsP9qibD/aomw/2qJsP9qibD/aomw/2qKr/9mirL/bIqv/2+LsP80Qlj/TF53/0BRZf80QVD/
bYyz+26NtG5rhKc3ZoWu5zlOaP8vO0r/Rlp1/zQ/Tf9jhK3/XoKz/2eFrf9mgab/NkNX/xEREv8u
Okj/X32h/2GGtv9mgab/OkRT/woQGP8PEBD/GBIL/xQRDv8NEBP/ERER/xEREf8QEBD/EBAQ/xAQ
EP8OERX/PEpf/2uIrv9pibL/aYmx/2mIsv9qibD/aomw/2qJsP9qibD/aomw/2uKr/9rirD/aoq0
/2Z+nf8nM0T/YHaU/ys1Qf9KXXf/bo62522Mszd1hqIPZ4Wsuk9sj/8fJzP/UGeG/ysyPv9cco//
YISy/2aEq/9rhqv/X4Cr/zVFWf8OERH/LjlH/2V6lv84RVv/DhAV/xUVFP8VFhb/ERQZ/xEVGf8T
FRb/ERES/xEREv8TFRb/ExUY/xMVF/82QlL/bIWm/2eIs/9miLP/bImv/22Jrv9qibD/aomw/2qJ
sP9qibD/aomw/2uJsf9viq//aIq3/0Zacv81RFf/WnCM/yIpM/9ge53/bo21um2Msw9Tf7MAZIOs
cl9/p/4qNEP/QFBl/0FMYf86SGD/Z4Wt/2CErv9ohan/Y4Wv/2KCpv82Rlf/DxIV/yUlJf8QEhf/
KjdL/1hqg/9Waof/UmmL/1Jrjf9MX3b/Fhkc/xMXHP9NXXL/UGuO/1VtjP9og6X/a4mx/2iHsP9o
h7H/aoew/2uIsP9qibD/aomw/2uJr/9ria//bImv/2iJsv9vi67/ZoKk/yY0R/9bbYT/PEte/zRB
UP9ri7H+bYyzcmyKsQBjg6sAY4OsKmOErt5IX3z/JCs1/1Zphf8mMEP/WHGR/2mHrP9jha7/ZYWt
/2aGrv9hgKr/OERY/xAQFf8sNkn/Yn6e/2qKrv9oia7/aImw/2iLs/9eeJf/Fhgf/xEWIP9hdpL/
aYu2/2qKsf9ribD/aYix/2mHsP9ph7D/aYew/2qIsf9qibD/aYiw/2iIsP9piLD/aYmx/2qKsf9t
jbP/S1tv/y8/U/9gd5P/Iykw/1Vsif9tjbTebIuzKmyLswBigqsAYICoA2ODrJBffaT/KDNA/0BQ
Z/8/VHD/NT5M/2mDpf9ihK//ZYSt/2SErv9fhLT/ZYGn/1FkgP9jfJ//Zoiv/2SGrv9lhq7/ZYev
/2aIr/9jf6P/SVZv/0dWb/9lf6H/Zoiy/2iIr/9qiK//aoex/2mHsP9ph7D/aoix/2qIsP9ria//
aIiw/2eHsP9oiLH/aYmx/22Msv9feZn/KDI//1xzj/88TF7/LzlH/2mHrf9si7KQb46xA22MsQAA
AAAAYoOtAGODrTBkhK7fSmF//x4lL/9Ra4z/MjxL/0FSav9ihbH/ZoWs/2OFrv9mh6v/Yoaw/2GH
tP9niK3/Z4Wu/2aFr/9nhq//aIav/2iGr/9ohrD/aYm0/2qKs/9nh7H/aIew/2qIrv9qiK//aYew
/2mHsP9qiLH/aoix/2uIsP9ria//aIiw/2eIsv9pibH/bYuw/2qGq/8xPU//Q1Zx/1xxi/8hJy7/
VnCP/22MtN9si7IwbIuyAAAAAAAAAAAAYoOtAF6BrgFkhK58YoGq/DJAU/8sN0b/Vm+P/yUxQ/9M
Yn//aYew/2aFrv9qh6r/Zoat/2KGsP9lhq3/Z4Wv/2eFr/9nh67/Z4av/2eGsP9mhrH/ZIex/2SG
sf9nh7D/a4iu/2uHsP9ph7D/aYew/2mHsP9qiLH/aoix/2qIsP9ria//aIix/2mJsf9ui7D/cYur
/zxMYv80QVX/ZX6e/yozPf8+Tl//a4uy/GyLs3xui7EBbIuyAAAAAAAAAAAAAAAAAGWErQBkhK0Z
ZoavvVt4m/8mLTj/Okth/1Rqhf8nMD7/T2aJ/2mHsf9ohq3/aIas/2mHq/9mhq3/ZoWu/2aGrv9k
h67/ZYev/2aGsP9oh67/aYes/2iHrv9qiK7/aoiu/2eHsf9ph7D/aYew/2iHsf9oiLL/aoiw/2yJ
r/9qibD/aYix/2yLsf9viq3/P1Bo/yw2R/9ie5z/OUVW/yo0QP9mgqX/bo2yvWyMsRltjLEAAAAA
AAAAAAAAAAAAAAAAAGeFrwBlhKwAZoStPmeGruBTbI7/HSUu/0RWa/9VZ4D/JzBC/0xgev9nhq3/
ZYev/2SGrv9khq3/aIat/2iGr/9mhrH/Zoaw/2qHrv9qh6z/Z4au/2iHrv9piK//aYiv/2mIr/9r
h6//a4iv/2uJr/9qia//aYmw/2iIsv9oiLL/bouy/2uGqP88S1//KzZH/2B5mf8/T2T/JCw2/114
mf9tjLTgbIuyPm2LsQBqirQAAAAAAAAAAAAAAAAAAAAAAAAAAABkhK4Aa4WqAWGEr2BjhLHvSWGA
/x0jKv9FVGn/VmqJ/ykzRv8+TWP/YX2e/2aIrv9hhq7/Zoau/2iGr/9mhrD/Zoax/2eGr/9oh67/
aoit/2qIrf9riK7/a4iu/2uIrv9mh7P/Z4ey/22Jrv9uiqz/a4mu/2qJsv9tjLP/YXmY/zE9Tv8y
QFT/ZHya/0BPY/8hKDH/WHGQ/22NtO9ti7JgbouwAW2LsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAX4SwAFuEsQVlhK5yZ4Ws8ktlgP8fKDH/O0ld/1xyk/83SWT/LjpL/05jev9jf6D/Z4as
/2iGr/9nhrD/ZYax/2SGsv9khrH/Z4ev/2iHsP9oh7D/Z4ew/2iHsP9tiK7/bIiv/2aIsv9mibT/
bIuz/2mDpf9JWnD/JDBA/0RXcf9hfJ7/N0RW/yUsNv9ZcZD/bYyz8m2LsnJqi7QFa4uzAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGqFqQBrhagIaIaqcmOHre9TcJH/Ji88/yw1
Qv9Ybo7/TmmM/y5CWf8xP1L/Qlh1/1hxkv9mgKH/aoaq/2mIrv9nh7D/aIew/2iHr/9oiLD/aIiw
/2iIsP9ribH/a4q0/2iJsP9ifJ3/Sllw/y41Q/82QE//WnKR/1Zwj/8oMj7/KjVD/1x3mv9ujbTv
bIuycmqLsghqi7IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABi
h6oAYoeoBWCGrV9lh7DgYXuh/zdGWf8gJy//QE9j/1x1l/9Uaov/PU1l/y8+Uv80RVr/QVVs/05j
fv9Wb47/XHeZ/2F8nv9ifZ//YXue/1x3mf9WbYz/Slxz/zdEUv8sNUL/NUFV/1Vng/9edpX/O0xh
/x8nL/88TGD/aIOl/26MsuBsi7JfaYq1BWqKtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAX4SyAFWDtwJlha49Z4avvWWErfxNZYT/KjRB/yQqMv89
TWT/WXCR/154m/9Saor/Q1lz/zpMY/82RFn/NEFT/zI/Uf8wPE7/LzpN/yw4Sv8wO0v/OkhZ/0tf
dv9edZL/WG+N/zpLYf8gKTT/LjlG/1Vujf9rirH8boyxvW2LsD1oibYCbIqyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFqDrQBqha8A
Y4WuGGWFr3xmhrDgYoCo/0xjgP8uOUr/ISgy/yw2RP9BUmb/VGuG/152lP9iepv/XXyb/1x5mv9b
eJn/W3iY/1t2lP9ddI//VmmC/0JRZP8rNkP/Iiky/zM/Tf9Ta4f/aIes/2yLs+BrirF8a4uzGHCK
qwBki7oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAZIWuAGSErwNlha4wZYavkGeHsd9lhKz9W3SW/0RXb/8vPE3/
Iyw3/yEpNP8kLTr/JjA9/yo2RP8qNUP/JjA9/yUuOf8iKjT/JS45/zE/UP9EWnX/XnmZ/22Jrf1t
jLPfbIuykGuKsTBqirEDa4qxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlha8AZISv
BGaGrypmh69yZoiyumeIs+dmhq/7Y3+j/1t1lP9RaYT/SmJ8/0Zcdf9IXHX/TWJ9/1Nqh/9feJf/
Z4Om/2qJsPtpirPnaYmyumuKsXJrirEqbIqxBGuKsQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGaGsABlhK8AZIezD2WHsTdpiLBubYqvoW6Mr8ttjLLjbIq3
822Kt/1ui7f9cIu482+Kt+NxjLPLcY2voW6Lr25piLA3Z4ewD2KFtQBkhrQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAA//8AAP/4AAAf
/wAA/+AAAAf/AAD/wAAAA/8AAP8AAAAA/wAA/gAAAAB/AAD8AAAAAD8AAPgAAAAAHwAA8AAAAAAP
AADwAAAAAA8AAOAAAAAABwAAwAAAAAADAADAAAAAAAMAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAwAAAAAADAADAAAAAAAMAAOAA
AAAABwAA8AAAAAAPAADwAAAAAA8AAPgAAAAAHwAA/AAAAAA/AAD+AAAAAH8AAP8AAAAA/wAA/8AA
AAP/AAD/4AAAB/8AAP/4AAAf/wAA//8AAP//AAA=')
	#endregion
	$formNetworkConnectivityN.MaximumSize = '550, 445'
	$formNetworkConnectivityN.MinimumSize = '200, 100'
	$formNetworkConnectivityN.Name = 'formNetworkConnectivityN'
	$formNetworkConnectivityN.Text = 'Network Connectivity Notify'
	$formNetworkConnectivityN.add_FormClosed($formNetworkConnectivityN_FormClosed)
	$formNetworkConnectivityN.add_Load($formNetworkConnectivityN_Load)
	#
	# buttonClearLog
	#
	$buttonClearLog.Anchor = 'Top, Left, Right'
	$buttonClearLog.Cursor = 'Hand'
	$buttonClearLog.Font = 'Microsoft Sans Serif, 8pt'
	$buttonClearLog.Location = '242, 344'
	$buttonClearLog.Margin = '0, 0, 0, 0'
	$buttonClearLog.MaximumSize = '70, 23'
	$buttonClearLog.MinimumSize = '35, 0'
	$buttonClearLog.Name = 'buttonClearLog'
	$buttonClearLog.Size = '70, 23'
	$buttonClearLog.TabIndex = 15
	$buttonClearLog.Text = 'Clear Log'
	$buttonClearLog.UseVisualStyleBackColor = $True
	$buttonClearLog.add_Click($buttonClearLog_Click)
	#
	# toolstripstatus
	#
	[void]$toolstripstatus.Items.Add($toolstripstatus1)
	$toolstripstatus.Location = '0, 376'
	$toolstripstatus.Name = 'toolstripstatus'
	$toolstripstatus.Size = '335, 22'
	$toolstripstatus.TabIndex = 2
	$toolstripstatus.Text = 'statusstrip1'
	#
	# tabcontrol1
	#
	$tabcontrol1.Controls.Add($tabpageEndpoint)
	$tabcontrol1.Controls.Add($tabpageVoice)
	$tabcontrol1.Controls.Add($tabpageNotify)
	$tabcontrol1.Controls.Add($tabpageAbout)
	$tabcontrol1.Anchor = 'Top, Bottom, Left, Right'
	$tabcontrol1.Font = 'Microsoft Sans Serif, 8.25pt'
	$tabcontrol1.ItemSize = '50, 20'
	$tabcontrol1.Location = '0, 1'
	$tabcontrol1.Multiline = $True
	$tabcontrol1.Name = 'tabcontrol1'
	$tabcontrol1.SelectedIndex = 0
	$tabcontrol1.Size = '334, 328'
	$tabcontrol1.TabIndex = 1
	#
	# tabpageEndpoint
	#
	$tabpageEndpoint.Controls.Add($groupboxLogging)
	$tabpageEndpoint.Controls.Add($groupboxEndpoint)
	$tabpageEndpoint.AutoScroll = $True
	$tabpageEndpoint.BackColor = 'Control'
	$tabpageEndpoint.Location = '4, 24'
	$tabpageEndpoint.Name = 'tabpageEndpoint'
	$tabpageEndpoint.Padding = '3, 3, 3, 3'
	$tabpageEndpoint.Size = '326, 300'
	$tabpageEndpoint.TabIndex = 4
	$tabpageEndpoint.Text = 'Endpoint'
	#
	# groupboxLogging
	#
	$groupboxLogging.Controls.Add($checkboxAutoScroll)
	$groupboxLogging.Controls.Add($richtextboxLog)
	$groupboxLogging.Controls.Add($buttonExportLog)
	$groupboxLogging.Anchor = 'Top, Left, Right'
	$groupboxLogging.Location = '5, 128'
	$groupboxLogging.Name = 'groupboxLogging'
	$groupboxLogging.Size = '314, 169'
	$groupboxLogging.TabIndex = 23
	$groupboxLogging.TabStop = $False
	$groupboxLogging.Text = 'Logging'
	#
	# checkboxAutoScroll
	#
	$checkboxAutoScroll.Anchor = 'Top, Right'
	$checkboxAutoScroll.CheckAlign = 'MiddleRight'
	$checkboxAutoScroll.Checked = $True
	$checkboxAutoScroll.CheckState = 'Checked'
	$checkboxAutoScroll.Location = '126, 11'
	$checkboxAutoScroll.Margin = '0, 0, 0, 0'
	$checkboxAutoScroll.Name = 'checkboxAutoScroll'
	$checkboxAutoScroll.Size = '81, 26'
	$checkboxAutoScroll.TabIndex = 11
	$checkboxAutoScroll.Text = 'Auto Scroll:'
	$checkboxAutoScroll.TextAlign = 'MiddleRight'
	$checkboxAutoScroll.UseVisualStyleBackColor = $True
	#
	# richtextboxLog
	#
	$richtextboxLog.Anchor = 'Top, Left, Right'
	$richtextboxLog.BackColor = 'ControlLightLight'
	$richtextboxLog.Location = '6, 37'
	$richtextboxLog.MinimumSize = '30, 20'
	$richtextboxLog.Name = 'richtextboxLog'
	$richtextboxLog.ReadOnly = $True
	$richtextboxLog.Size = '302, 126'
	$richtextboxLog.TabIndex = 25
	$richtextboxLog.Text = ''
	$richtextboxLog.WordWrap = $False
	$richtextboxLog.add_TextChanged($richtextboxLog_TextChanged)
	#
	# buttonExportLog
	#
	$buttonExportLog.Anchor = 'Top, Right'
	$buttonExportLog.Cursor = 'Hand'
	$buttonExportLog.Location = '233, 10'
	$buttonExportLog.Name = 'buttonExportLog'
	$buttonExportLog.Size = '70, 23'
	$buttonExportLog.TabIndex = 12
	$buttonExportLog.Text = 'Export Log'
	$buttonExportLog.UseVisualStyleBackColor = $True
	$buttonExportLog.add_Click($buttonExportLog_Click)
	#
	# groupboxEndpoint
	#
	$groupboxEndpoint.Controls.Add($labelCheckType)
	$groupboxEndpoint.Controls.Add($comboboxCheckType)
	$groupboxEndpoint.Controls.Add($comboboxTolerantPercent)
	$groupboxEndpoint.Controls.Add($labelTolerantPercent)
	$groupboxEndpoint.Controls.Add($comboboxTieBreaker)
	$groupboxEndpoint.Controls.Add($labelTiebreaker)
	$groupboxEndpoint.Controls.Add($textboxEndpointURL)
	$groupboxEndpoint.Controls.Add($labelEndpoint)
	$groupboxEndpoint.Controls.Add($labelInterval)
	$groupboxEndpoint.Controls.Add($comboboxInterval)
	$groupboxEndpoint.Controls.Add($textboxEndpointPort)
	$groupboxEndpoint.Controls.Add($labelTCPPort)
	$groupboxEndpoint.Anchor = 'Top, Left, Right'
	$groupboxEndpoint.BackColor = 'Control'
	$groupboxEndpoint.Location = '5, 8'
	$groupboxEndpoint.Name = 'groupboxEndpoint'
	$groupboxEndpoint.Size = '315, 111'
	$groupboxEndpoint.TabIndex = 22
	$groupboxEndpoint.TabStop = $False
	$groupboxEndpoint.Text = 'Endpoint Settings'
	#
	# labelCheckType
	#
	$labelCheckType.Anchor = 'Top, Left, Right'
	$labelCheckType.AutoSize = $True
	$labelCheckType.Cursor = 'Help'
	$labelCheckType.Location = '9, 65'
	$labelCheckType.Name = 'labelCheckType'
	$labelCheckType.Size = '68, 13'
	$labelCheckType.TabIndex = 24
	$labelCheckType.Text = 'Check Type:'
	$labelCheckType.add_MouseHover($labelCheckType_MouseHover)
	#
	# comboboxCheckType
	#
	$comboboxCheckType.Anchor = 'Top, Left, Right'
	$comboboxCheckType.FormattingEnabled = $True
	[void]$comboboxCheckType.Items.Add('Internet Connectivity (Normal)')
	[void]$comboboxCheckType.Items.Add('Internet Connectivity (High Accuracy)')
	[void]$comboboxCheckType.Items.Add('Port Probing (Normal)')
	[void]$comboboxCheckType.Items.Add('Port Probing (High Accuracy)')
	$comboboxCheckType.Location = '12, 82'
	$comboboxCheckType.MinimumSize = '21, 0'
	$comboboxCheckType.Name = 'comboboxCheckType'
	$comboboxCheckType.Size = '184, 21'
	$comboboxCheckType.TabIndex = 8
	$comboboxCheckType.add_SelectedIndexChanged($comboboxCheckType_SelectedIndexChanged)
	#
	# comboboxTolerantPercent
	#
	$comboboxTolerantPercent.Anchor = 'Top, Right'
	$comboboxTolerantPercent.FormattingEnabled = $True
	[void]$comboboxTolerantPercent.Items.Add('0%')
	[void]$comboboxTolerantPercent.Items.Add('20%')
	[void]$comboboxTolerantPercent.Items.Add('40%')
	[void]$comboboxTolerantPercent.Items.Add('60%')
	[void]$comboboxTolerantPercent.Items.Add('80%')
	$comboboxTolerantPercent.Location = '213, 82'
	$comboboxTolerantPercent.MinimumSize = '21, 0'
	$comboboxTolerantPercent.Name = 'comboboxTolerantPercent'
	$comboboxTolerantPercent.Size = '43, 21'
	$comboboxTolerantPercent.TabIndex = 9
	$comboboxTolerantPercent.add_MouseHover($comboboxTolerantPercent_MouseHover)
	#
	# labelTolerantPercent
	#
	$labelTolerantPercent.Anchor = 'Top, Right'
	$labelTolerantPercent.AutoSize = $True
	$labelTolerantPercent.Cursor = 'Help'
	$labelTolerantPercent.Location = '206, 64'
	$labelTolerantPercent.Name = 'labelTolerantPercent'
	$labelTolerantPercent.Size = '58, 13'
	$labelTolerantPercent.TabIndex = 21
	$labelTolerantPercent.Text = 'Tolerance:'
	$labelTolerantPercent.TextAlign = 'MiddleLeft'
	$labelTolerantPercent.add_MouseHover($labelTolerantPercent_MouseHover)
	#
	# comboboxTieBreaker
	#
	$comboboxTieBreaker.Anchor = 'Top, Right'
	$comboboxTieBreaker.FormattingEnabled = $True
	[void]$comboboxTieBreaker.Items.Add('3')
	[void]$comboboxTieBreaker.Items.Add('2')
	[void]$comboboxTieBreaker.Items.Add('1')
	$comboboxTieBreaker.Location = '267, 36'
	$comboboxTieBreaker.MinimumSize = '21, 0'
	$comboboxTieBreaker.Name = 'comboboxTieBreaker'
	$comboboxTieBreaker.Size = '36, 21'
	$comboboxTieBreaker.TabIndex = 7
	$comboboxTieBreaker.add_MouseHover($comboboxTieBreaker_MouseHover)
	#
	# labelTiebreaker
	#
	$labelTiebreaker.Anchor = 'Top, Right'
	$labelTiebreaker.AutoSize = $True
	$labelTiebreaker.Cursor = 'Help'
	$labelTiebreaker.Location = '254, 18'
	$labelTiebreaker.Margin = '0, 0, 0, 0'
	$labelTiebreaker.Name = 'labelTiebreaker'
	$labelTiebreaker.Size = '62, 13'
	$labelTiebreaker.TabIndex = 19
	$labelTiebreaker.Text = 'TieBreaker:'
	$labelTiebreaker.TextAlign = 'MiddleLeft'
	$labelTiebreaker.add_MouseHover($labelTiebreaker_MouseHover)
	#
	# textboxEndpointURL
	#
	$textboxEndpointURL.Anchor = 'Top, Left, Right'
	$textboxEndpointURL.Location = '12, 37'
	$textboxEndpointURL.MinimumSize = '21, 21'
	$textboxEndpointURL.Name = 'textboxEndpointURL'
	$textboxEndpointURL.Size = '184, 20'
	$textboxEndpointURL.TabIndex = 5
	$textboxEndpointURL.add_Click($textboxEndpointURL_Click)
	$textboxEndpointURL.add_Leave($textboxEndpointURL_Leave)
	#
	# labelEndpoint
	#
	$labelEndpoint.Anchor = 'Top, Left, Right'
	$labelEndpoint.AutoSize = $True
	$labelEndpoint.Cursor = 'Help'
	$labelEndpoint.Font = 'Microsoft Sans Serif, 8pt'
	$labelEndpoint.Location = '12, 17'
	$labelEndpoint.Name = 'labelEndpoint'
	$labelEndpoint.Size = '52, 13'
	$labelEndpoint.TabIndex = 10
	$labelEndpoint.Text = 'Endpoint:'
	$labelEndpoint.add_MouseHover($labelEndpoint_MouseHover)
	#
	# labelInterval
	#
	$labelInterval.Anchor = 'Top, Right'
	$labelInterval.AutoSize = $True
	$labelInterval.Cursor = 'Help'
	$labelInterval.Font = 'Microsoft Sans Serif, 8pt'
	$labelInterval.Location = '265, 65'
	$labelInterval.Name = 'labelInterval'
	$labelInterval.Size = '45, 13'
	$labelInterval.TabIndex = 17
	$labelInterval.Text = 'Interval:'
	$labelInterval.add_MouseHover($labelInterval_MouseHover)
	#
	# comboboxInterval
	#
	$comboboxInterval.Anchor = 'Top, Right'
	$comboboxInterval.FormattingEnabled = $True
	[void]$comboboxInterval.Items.Add('300')
	[void]$comboboxInterval.Items.Add('120')
	[void]$comboboxInterval.Items.Add('60')
	[void]$comboboxInterval.Items.Add('30')
	[void]$comboboxInterval.Items.Add('10')
	[void]$comboboxInterval.Items.Add('5')
	[void]$comboboxInterval.Items.Add('3')
	[void]$comboboxInterval.Items.Add('2')
	[void]$comboboxInterval.Items.Add('1')
	$comboboxInterval.Location = '266, 82'
	$comboboxInterval.MinimumSize = '21, 0'
	$comboboxInterval.Name = 'comboboxInterval'
	$comboboxInterval.Size = '37, 21'
	$comboboxInterval.TabIndex = 10
	$comboboxInterval.Text = '1'
	$comboboxInterval.add_MouseHover($comboboxInterval_MouseHover)
	#
	# textboxEndpointPort
	#
	$textboxEndpointPort.Anchor = 'Top, Right'
	$textboxEndpointPort.Location = '213, 37'
	$textboxEndpointPort.MinimumSize = '21, 21'
	$textboxEndpointPort.Name = 'textboxEndpointPort'
	$textboxEndpointPort.Size = '40, 20'
	$textboxEndpointPort.TabIndex = 6
	$textboxEndpointPort.TextAlign = 'Right'
	$textboxEndpointPort.add_Click($textboxEndpointPort_Click)
	$textboxEndpointPort.add_Leave($textboxEndpointPort_Leave)
	#
	# labelTCPPort
	#
	$labelTCPPort.Anchor = 'Top, Right'
	$labelTCPPort.AutoSize = $True
	$labelTCPPort.Cursor = 'Help'
	$labelTCPPort.Font = 'Microsoft Sans Serif, 8pt'
	$labelTCPPort.Location = '205, 19'
	$labelTCPPort.Margin = '0, 0, 0, 0'
	$labelTCPPort.Name = 'labelTCPPort'
	$labelTCPPort.Size = '53, 13'
	$labelTCPPort.TabIndex = 12
	$labelTCPPort.Text = 'TCP Port:'
	$labelTCPPort.add_MouseHover($labelTCPPort_MouseHover)
	#
	# tabpageVoice
	#
	$tabpageVoice.Controls.Add($groupboxVoice)
	$tabpageVoice.AutoScroll = $True
	$tabpageVoice.BackColor = 'Control'
	$tabpageVoice.Location = '4, 24'
	$tabpageVoice.Name = 'tabpageVoice'
	$tabpageVoice.Padding = '3, 3, 3, 3'
	$tabpageVoice.Size = '326, 300'
	$tabpageVoice.TabIndex = 0
	$tabpageVoice.Text = 'Voice'
	#
	# groupboxVoice
	#
	$groupboxVoice.Controls.Add($labelUnstableText)
	$groupboxVoice.Controls.Add($textboxVoiceUnstable)
	$groupboxVoice.Controls.Add($buttonPlayUnstable)
	$groupboxVoice.Controls.Add($labelVolume)
	$groupboxVoice.Controls.Add($comboboxVoiceVolume)
	$groupboxVoice.Controls.Add($textboxVoiceConnected)
	$groupboxVoice.Controls.Add($checkboxVoiceEnabled)
	$groupboxVoice.Controls.Add($labelConnectedText)
	$groupboxVoice.Controls.Add($labelVoice)
	$groupboxVoice.Controls.Add($buttonPlayConnected)
	$groupboxVoice.Controls.Add($labelDisconnectedText)
	$groupboxVoice.Controls.Add($textboxVoiceDisconnected)
	$groupboxVoice.Controls.Add($buttonPlayDisconnected)
	$groupboxVoice.Controls.Add($labelSpeed)
	$groupboxVoice.Controls.Add($comboboxVoiceType)
	$groupboxVoice.Controls.Add($domainupdownVoiceSpeed)
	$groupboxVoice.Controls.Add($labelVoiceType)
	$groupboxVoice.Anchor = 'Top, Left, Right'
	$groupboxVoice.Location = '5, 8'
	$groupboxVoice.Name = 'groupboxVoice'
	$groupboxVoice.Size = '314, 289'
	$groupboxVoice.TabIndex = 21
	$groupboxVoice.TabStop = $False
	$groupboxVoice.Text = 'Voice Settings'
	#
	# labelUnstableText
	#
	$labelUnstableText.AutoSize = $True
	$labelUnstableText.Location = '12, 162'
	$labelUnstableText.Name = 'labelUnstableText'
	$labelUnstableText.Size = '168, 13'
	$labelUnstableText.TabIndex = 22
	$labelUnstableText.Text = 'Enter text to speak when unstable'
	#
	# textboxVoiceUnstable
	#
	$textboxVoiceUnstable.Anchor = 'Top, Left, Right'
	$textboxVoiceUnstable.Location = '12, 179'
	$textboxVoiceUnstable.Name = 'textboxVoiceUnstable'
	$textboxVoiceUnstable.Size = '193, 20'
	$textboxVoiceUnstable.TabIndex = 13
	$textboxVoiceUnstable.add_Click($textboxVoiceUnstable_Click)
	$textboxVoiceUnstable.add_Leave($textboxVoiceUnstable_Leave)
	#
	# buttonPlayUnstable
	#
	$buttonPlayUnstable.Anchor = 'Top, Right'
	$buttonPlayUnstable.Cursor = 'Hand'
	$buttonPlayUnstable.Font = 'Microsoft Sans Serif, 8pt'
	$buttonPlayUnstable.Location = '237, 176'
	$buttonPlayUnstable.Name = 'buttonPlayUnstable'
	$buttonPlayUnstable.Size = '66, 23'
	$buttonPlayUnstable.TabIndex = 14
	$buttonPlayUnstable.Text = 'Test Play'
	$buttonPlayUnstable.UseVisualStyleBackColor = $True
	$buttonPlayUnstable.add_Click($buttonPlayUnstable_Click)
	#
	# labelVolume
	#
	$labelVolume.Anchor = 'Top, Right'
	$labelVolume.AutoSize = $True
	$labelVolume.Location = '157, 16'
	$labelVolume.MinimumSize = '21, 0'
	$labelVolume.Name = 'labelVolume'
	$labelVolume.Size = '45, 13'
	$labelVolume.TabIndex = 21
	$labelVolume.Text = 'Volume:'
	#
	# comboboxVoiceVolume
	#
	$comboboxVoiceVolume.Anchor = 'Top, Right'
	$comboboxVoiceVolume.FormattingEnabled = $True
	[void]$comboboxVoiceVolume.Items.Add('100%')
	[void]$comboboxVoiceVolume.Items.Add('80%')
	[void]$comboboxVoiceVolume.Items.Add('60%')
	[void]$comboboxVoiceVolume.Items.Add('40%')
	[void]$comboboxVoiceVolume.Items.Add('20%')
	[void]$comboboxVoiceVolume.Items.Add('0%')
	$comboboxVoiceVolume.Location = '157, 34'
	$comboboxVoiceVolume.MaximumSize = '48, 0'
	$comboboxVoiceVolume.MinimumSize = '21, 0'
	$comboboxVoiceVolume.Name = 'comboboxVoiceVolume'
	$comboboxVoiceVolume.Size = '48, 21'
	$comboboxVoiceVolume.TabIndex = 6
	#
	# textboxVoiceConnected
	#
	$textboxVoiceConnected.Anchor = 'Top, Left, Right'
	$textboxVoiceConnected.ForeColor = 'WindowText'
	$textboxVoiceConnected.Location = '12, 85'
	$textboxVoiceConnected.Name = 'textboxVoiceConnected'
	$textboxVoiceConnected.Size = '193, 20'
	$textboxVoiceConnected.TabIndex = 9
	$textboxVoiceConnected.add_Click($textboxVoiceConnected_Click)
	$textboxVoiceConnected.add_Leave($textboxVoiceConnected_Leave)
	#
	# checkboxVoiceEnabled
	#
	$checkboxVoiceEnabled.Anchor = 'Top, Right'
	$checkboxVoiceEnabled.AutoSize = $True
	$checkboxVoiceEnabled.Checked = $True
	$checkboxVoiceEnabled.CheckState = 'Checked'
	$checkboxVoiceEnabled.Location = '286, 38'
	$checkboxVoiceEnabled.Name = 'checkboxVoiceEnabled'
	$checkboxVoiceEnabled.Size = '15, 14'
	$checkboxVoiceEnabled.TabIndex = 8
	$checkboxVoiceEnabled.UseVisualStyleBackColor = $True
	$checkboxVoiceEnabled.add_CheckedChanged($checkboxVoiceEnabled_CheckedChanged)
	#
	# labelConnectedText
	#
	$labelConnectedText.AutoSize = $True
	$labelConnectedText.Location = '12, 69'
	$labelConnectedText.Name = 'labelConnectedText'
	$labelConnectedText.Size = '179, 13'
	$labelConnectedText.TabIndex = 6
	$labelConnectedText.Text = 'Enter text to speak when connected'
	#
	# labelVoice
	#
	$labelVoice.Anchor = 'Top, Right'
	$labelVoice.AutoSize = $True
	$labelVoice.Location = '272, 18'
	$labelVoice.Name = 'labelVoice'
	$labelVoice.Size = '43, 13'
	$labelVoice.TabIndex = 19
	$labelVoice.Text = 'Enable:'
	#
	# buttonPlayConnected
	#
	$buttonPlayConnected.Anchor = 'Top, Right'
	$buttonPlayConnected.Cursor = 'Hand'
	$buttonPlayConnected.Font = 'Microsoft Sans Serif, 8pt'
	$buttonPlayConnected.Location = '237, 82'
	$buttonPlayConnected.Name = 'buttonPlayConnected'
	$buttonPlayConnected.Size = '66, 23'
	$buttonPlayConnected.TabIndex = 10
	$buttonPlayConnected.Text = 'Test Play'
	$buttonPlayConnected.UseVisualStyleBackColor = $True
	$buttonPlayConnected.add_Click($buttonPlayConnected_Click)
	#
	# labelDisconnectedText
	#
	$labelDisconnectedText.AutoSize = $True
	$labelDisconnectedText.Location = '12, 115'
	$labelDisconnectedText.Name = 'labelDisconnectedText'
	$labelDisconnectedText.Size = '192, 13'
	$labelDisconnectedText.TabIndex = 7
	$labelDisconnectedText.Text = 'Enter text to speak when disconnected'
	#
	# textboxVoiceDisconnected
	#
	$textboxVoiceDisconnected.Anchor = 'Top, Left, Right'
	$textboxVoiceDisconnected.Location = '12, 132'
	$textboxVoiceDisconnected.Name = 'textboxVoiceDisconnected'
	$textboxVoiceDisconnected.Size = '193, 20'
	$textboxVoiceDisconnected.TabIndex = 11
	$textboxVoiceDisconnected.add_Click($textboxVoiceDisconnected_Click)
	$textboxVoiceDisconnected.add_Leave($textboxVoiceDisconnected_Leave)
	#
	# buttonPlayDisconnected
	#
	$buttonPlayDisconnected.Anchor = 'Top, Right'
	$buttonPlayDisconnected.Cursor = 'Hand'
	$buttonPlayDisconnected.Font = 'Microsoft Sans Serif, 8pt'
	$buttonPlayDisconnected.Location = '237, 129'
	$buttonPlayDisconnected.Name = 'buttonPlayDisconnected'
	$buttonPlayDisconnected.Size = '66, 23'
	$buttonPlayDisconnected.TabIndex = 12
	$buttonPlayDisconnected.Text = 'Test Play'
	$buttonPlayDisconnected.UseVisualStyleBackColor = $True
	$buttonPlayDisconnected.add_Click($buttonPlayDisconnected_Click)
	#
	# labelSpeed
	#
	$labelSpeed.Anchor = 'Top, Right'
	$labelSpeed.AutoSize = $True
	$labelSpeed.Location = '234, 18'
	$labelSpeed.Name = 'labelSpeed'
	$labelSpeed.Size = '41, 13'
	$labelSpeed.TabIndex = 5
	$labelSpeed.Text = 'Speed:'
	#
	# comboboxVoiceType
	#
	$comboboxVoiceType.Anchor = 'Top, Left, Right'
	$comboboxVoiceType.FormattingEnabled = $True
	$comboboxVoiceType.Location = '12, 34'
	$comboboxVoiceType.MaximumSize = '139, 0'
	$comboboxVoiceType.MinimumSize = '20, 0'
	$comboboxVoiceType.Name = 'comboboxVoiceType'
	$comboboxVoiceType.Size = '139, 21'
	$comboboxVoiceType.TabIndex = 5
	#
	# domainupdownVoiceSpeed
	#
	$domainupdownVoiceSpeed.Anchor = 'Top, Right'
	$domainupdownVoiceSpeed.Location = '238, 36'
	$domainupdownVoiceSpeed.MinimumSize = '21, 0'
	$domainupdownVoiceSpeed.Name = 'domainupdownVoiceSpeed'
	$domainupdownVoiceSpeed.Size = '32, 20'
	$domainupdownVoiceSpeed.TabIndex = 7
	#
	# labelVoiceType
	#
	$labelVoiceType.Anchor = 'Top, Left, Right'
	$labelVoiceType.AutoSize = $True
	$labelVoiceType.Location = '12, 18'
	$labelVoiceType.Name = 'labelVoiceType'
	$labelVoiceType.Size = '64, 13'
	$labelVoiceType.TabIndex = 4
	$labelVoiceType.Text = 'Voice Type:'
	#
	# tabpageNotify
	#
	$tabpageNotify.Controls.Add($groupboxPopup)
	$tabpageNotify.AutoScroll = $True
	$tabpageNotify.BackColor = 'Control'
	$tabpageNotify.Location = '4, 24'
	$tabpageNotify.Name = 'tabpageNotify'
	$tabpageNotify.Padding = '3, 3, 3, 3'
	$tabpageNotify.Size = '326, 300'
	$tabpageNotify.TabIndex = 1
	$tabpageNotify.Text = 'Notify'
	#
	# groupboxPopup
	#
	$groupboxPopup.Controls.Add($buttonPopupUnstable)
	$groupboxPopup.Controls.Add($textboxPopupUnstable)
	$groupboxPopup.Controls.Add($labelUnstableEnterText)
	$groupboxPopup.Controls.Add($checkboxPopupEnabled)
	$groupboxPopup.Controls.Add($textboxMessageTitle)
	$groupboxPopup.Controls.Add($labelMessageTitle)
	$groupboxPopup.Controls.Add($buttonPopupDisconnected)
	$groupboxPopup.Controls.Add($buttonPopupConnected)
	$groupboxPopup.Controls.Add($textboxPopupDisconnected)
	$groupboxPopup.Controls.Add($labelDisconnectedEnterTex)
	$groupboxPopup.Controls.Add($textboxPopupConnected)
	$groupboxPopup.Controls.Add($labelEnterTextToNotifyWhe)
	$groupboxPopup.Anchor = 'Top, Left, Right'
	$groupboxPopup.Location = '5, 8'
	$groupboxPopup.Name = 'groupboxPopup'
	$groupboxPopup.Size = '314, 289'
	$groupboxPopup.TabIndex = 24
	$groupboxPopup.TabStop = $False
	$groupboxPopup.Text = 'Pop-up Settings'
	#
	# buttonPopupUnstable
	#
	$buttonPopupUnstable.Anchor = 'Top, Right'
	$buttonPopupUnstable.Cursor = 'Hand'
	$buttonPopupUnstable.Location = '237, 176'
	$buttonPopupUnstable.Name = 'buttonPopupUnstable'
	$buttonPopupUnstable.Size = '66, 23'
	$buttonPopupUnstable.TabIndex = 12
	$buttonPopupUnstable.Text = 'Test Notify'
	$buttonPopupUnstable.UseVisualStyleBackColor = $True
	$buttonPopupUnstable.add_Click($buttonPopupUnstable_Click)
	$buttonPopupUnstable.add_MouseHover($buttonPopupUnstable_MouseHover)
	#
	# textboxPopupUnstable
	#
	$textboxPopupUnstable.Anchor = 'Top, Left, Right'
	$textboxPopupUnstable.Location = '12, 179'
	$textboxPopupUnstable.Name = 'textboxPopupUnstable'
	$textboxPopupUnstable.Size = '208, 20'
	$textboxPopupUnstable.TabIndex = 11
	$textboxPopupUnstable.add_Click($textboxPopupUnstable_Click)
	$textboxPopupUnstable.add_Leave($textboxPopupUnstable_Leave)
	#
	# labelUnstableEnterText
	#
	$labelUnstableEnterText.AutoSize = $True
	$labelUnstableEnterText.Location = '11, 156'
	$labelUnstableEnterText.Name = 'labelUnstableEnterText'
	$labelUnstableEnterText.Size = '164, 13'
	$labelUnstableEnterText.TabIndex = 22
	$labelUnstableEnterText.Text = 'Enter text to notify when unstable'
	#
	# checkboxPopupEnabled
	#
	$checkboxPopupEnabled.Anchor = 'Top, Right'
	$checkboxPopupEnabled.AutoSize = $True
	$checkboxPopupEnabled.CheckAlign = 'MiddleRight'
	$checkboxPopupEnabled.Checked = $True
	$checkboxPopupEnabled.CheckState = 'Checked'
	$checkboxPopupEnabled.Location = '241, 39'
	$checkboxPopupEnabled.Name = 'checkboxPopupEnabled'
	$checkboxPopupEnabled.Size = '62, 17'
	$checkboxPopupEnabled.TabIndex = 6
	$checkboxPopupEnabled.Text = 'Enable:'
	$checkboxPopupEnabled.TextAlign = 'MiddleCenter'
	$checkboxPopupEnabled.UseVisualStyleBackColor = $True
	$checkboxPopupEnabled.add_CheckedChanged($checkboxPopupEnabled_CheckedChanged)
	#
	# textboxMessageTitle
	#
	$textboxMessageTitle.Anchor = 'Top, Left, Right'
	$textboxMessageTitle.Location = '11, 36'
	$textboxMessageTitle.Name = 'textboxMessageTitle'
	$textboxMessageTitle.Size = '209, 20'
	$textboxMessageTitle.TabIndex = 5
	$textboxMessageTitle.add_Click($textboxMessageTitle_Click)
	$textboxMessageTitle.add_Leave($textboxMessageTitle_Leave)
	#
	# labelMessageTitle
	#
	$labelMessageTitle.AutoSize = $True
	$labelMessageTitle.Location = '12, 20'
	$labelMessageTitle.Name = 'labelMessageTitle'
	$labelMessageTitle.Size = '76, 13'
	$labelMessageTitle.TabIndex = 6
	$labelMessageTitle.Text = 'Message Title:'
	#
	# buttonPopupDisconnected
	#
	$buttonPopupDisconnected.Anchor = 'Top, Right'
	$buttonPopupDisconnected.Cursor = 'Hand'
	$buttonPopupDisconnected.Location = '237, 129'
	$buttonPopupDisconnected.Name = 'buttonPopupDisconnected'
	$buttonPopupDisconnected.Size = '66, 23'
	$buttonPopupDisconnected.TabIndex = 10
	$buttonPopupDisconnected.Text = 'Test Notify'
	$buttonPopupDisconnected.UseVisualStyleBackColor = $True
	$buttonPopupDisconnected.add_Click($buttonPopupDisconnected_Click)
	$buttonPopupDisconnected.add_MouseHover($buttonPopupDisconnected_MouseHover)
	#
	# buttonPopupConnected
	#
	$buttonPopupConnected.Anchor = 'Top, Right'
	$buttonPopupConnected.Cursor = 'Hand'
	$buttonPopupConnected.Location = '237, 82'
	$buttonPopupConnected.Name = 'buttonPopupConnected'
	$buttonPopupConnected.Size = '66, 23'
	$buttonPopupConnected.TabIndex = 8
	$buttonPopupConnected.Text = 'Test Notify'
	$buttonPopupConnected.UseVisualStyleBackColor = $True
	$buttonPopupConnected.add_Click($buttonPopupConnected_Click)
	$buttonPopupConnected.add_MouseHover($buttonPopupConnected_MouseHover)
	#
	# textboxPopupDisconnected
	#
	$textboxPopupDisconnected.Anchor = 'Top, Left, Right'
	$textboxPopupDisconnected.Location = '12, 132'
	$textboxPopupDisconnected.Name = 'textboxPopupDisconnected'
	$textboxPopupDisconnected.Size = '208, 20'
	$textboxPopupDisconnected.TabIndex = 9
	$textboxPopupDisconnected.add_Click($textboxPopupDisconnected_Click)
	$textboxPopupDisconnected.add_Leave($textboxPopupDisconnected_Leave)
	#
	# labelDisconnectedEnterTex
	#
	$labelDisconnectedEnterTex.AutoSize = $True
	$labelDisconnectedEnterTex.Location = '12, 110'
	$labelDisconnectedEnterTex.Name = 'labelDisconnectedEnterTex'
	$labelDisconnectedEnterTex.Size = '188, 13'
	$labelDisconnectedEnterTex.TabIndex = 2
	$labelDisconnectedEnterTex.Text = 'Enter text to notify when disconnected'
	#
	# textboxPopupConnected
	#
	$textboxPopupConnected.Anchor = 'Top, Left, Right'
	$textboxPopupConnected.Location = '12, 85'
	$textboxPopupConnected.Name = 'textboxPopupConnected'
	$textboxPopupConnected.Size = '209, 20'
	$textboxPopupConnected.TabIndex = 7
	$textboxPopupConnected.add_Click($textboxPopupConnected_Click)
	$textboxPopupConnected.add_Leave($textboxPopupConnected_Leave)
	#
	# labelEnterTextToNotifyWhe
	#
	$labelEnterTextToNotifyWhe.AutoSize = $True
	$labelEnterTextToNotifyWhe.Location = '10, 66'
	$labelEnterTextToNotifyWhe.Name = 'labelEnterTextToNotifyWhe'
	$labelEnterTextToNotifyWhe.Size = '175, 13'
	$labelEnterTextToNotifyWhe.TabIndex = 0
	$labelEnterTextToNotifyWhe.Text = 'Enter text to notify when connected'
	#
	# tabpageAbout
	#
	$tabpageAbout.Controls.Add($linklabelWebsite)
	$tabpageAbout.Controls.Add($groupbox1)
	$tabpageAbout.Controls.Add($labelAuthorPhyoWaiPaingLa)
	$tabpageAbout.AutoScroll = $True
	$tabpageAbout.BackColor = 'Control'
	#region Binary Data
	$tabpageAbout.BackgroundImage = [System.Convert]::FromBase64String('
/9j/4AAQSkZJRgABAgEAXwBfAAD/7gAOQWRvYmUAZAAAAAAB/+EEikV4aWYAAE1NACoAAAAIAAcB
EgADAAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAFAAA
AHIBMgACAAAAFAAAAIaHaQAEAAAAAQAAAJoAAADGAF/8kgABAAAAX/ySAAEAAEFkb2JlIFBob3Rv
c2hvcCA3LjAAMjAyMjowMzoxNiAxNDowNjowMgAAA6ABAAMAAAAB//8AAKACAAQAAAABAAADN6AD
AAQAAAABAAABKgAAAAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAEUARsABQAAAAEAAAEcASgA
AwAAAAEAAgAAAgEABAAAAAEAAAEkAgIABAAAAAEAAANdAAAAAAAAAEgAAAABAAAASAAAAAH/2P/g
ABBKRklGAAECAQBIAEgAAP/tAAxBZG9iZV9DTQAC/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkI
DAkJDBELCgsRFQ8MDA8VGBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
DAENCwsNDg0QDg4QFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwM
DAwMDAwMDAwM/8AAEQgALgCAAwEiAAIRAQMRAf/dAAQACP/EAT8AAAEFAQEBAQEBAAAAAAAAAAMA
AQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAABBAEDAgQCBQcGCAUDDDMB
AAIRAwQhEjEFQVFhEyJxgTIGFJGhsUIjJBVSwWIzNHKC0UMHJZJT8OHxY3M1FqKygyZEk1RkRcKj
dDYX0lXiZfKzhMPTdePzRieUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9jdHV2d3h5ent8fX5/cR
AAICAQIEBAMEBQYHBwYFNQEAAhEDITESBEFRYXEiEwUygZEUobFCI8FS0fAzJGLhcoKSQ1MVY3M0
8SUGFqKygwcmNcLSRJNUoxdkRVU2dGXi8rOEw9N14/NGlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW
5vYnN0dXZ3eHl6e3x//aAAwDAQACEQMRAD8ADkZFzcgAgPqDy0j1LWFobt3lv2Vrv0vu9Vvr/wDg
atV5Vho31sN432MDnS1xaxptY5wZW73/APaf/jk7qq3O3nc1xEFzHuYSPB/puZvRmFrGhrRtaNAA
qVim7RvdD9rsdXXYMS4b3FrmO2hzAI/Subu91e4/1/8ACbEM57/VNYxLtwAMwIg8PdG7+r/XVveE
29LTsqj3azc3f6jW0WC2sAljwRMuFbdrod9Ld6v8iv6aZmbaa2vfh3tc4E7A0Ej+Trt9ytb9E25K
x2Vr3YkkgOILSRJaeR9yZO4ymQSpJJJJSkkkklKSSSSUpJJJJT//0DpJJKi3lJJJJKUkkkkpSSSS
SlJJJJKUkkkkpSSSSSlJJJJKf//ROkkkqLeUkkkkpSSSSSlJJJJKUkkkkpSSSSSlJJJJKUkkkkp/
/9kA/9sAQwABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAgICAgIC
AgICAgIDAwMDAwMDAwMD/9sAQwEBAQEBAQEBAQEBAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgBKgM3AwERAAIRAQMRAf/EAB8AAAAGAgMB
AAAAAAAAAAAAAAcIBgUECQMKAgEAC//EALUQAAIBAwQBAwMCAwMDAgYJdQECAwQRBRIGIQcTIgAI
MRRBMiMVCVFCFmEkMxdScYEYYpElQ6Gx8CY0cgoZwdE1J+FTNoLxkqJEVHNFRjdHYyhVVlcassLS
4vJkg3SThGWjs8PT4yk4ZvN1Kjk6SElKWFlaZ2hpanZ3eHl6hYaHiImKlJWWl5iZmqSlpqeoqaq0
tba3uLm6xMXGx8jJytTV1tfY2drk5ebn6Onq9PX29/j5+v/EAB8BAAAGAwEBAQAAAAAAAAAAAAYF
BAMHAggBCQAKC//EALURAAIBAwIEBAMFBAQEBgYFbQECAxEEIRIFMQYAIhNBUQcyYRRxCEKBI5EV
UqFiFjMJsSTB0UNy8BfhgjQlklMYY0TxorImNRlUNkVkJwpzg5NGdMLS4vJVZXVWN4SFo7PD0+Pz
KRqUpLTE1OT0laW1xdXl9ShHV2Y4doaWprbG1ub2Z3eHl6e3x9fn90hYaHiImKi4yNjo+DlJWWl5
iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/dAAQAZ//aAAwDAQACEQMRAD8AHV64KSvOo88m/wCf8OR7
xK16anTnrLdY8jPWL71lI9H+AN7/AO9+9h6DhnrdM8esoq3PJA/xH1vxwBYi3vRypPz62TUk9Bz2
T311F0vTQ1HanY20tjyVkYbG4zN5WJc/mCVOlMLtil+63HmpJWFlWlpZSx4HtdZbZuG4PSxtJJVH
EqO0fa3wj8yOi6/3LbttCtf3ccVeAY9x/wBKo7j+QPQLD51dXVKiXBdZ/KfdtA36Mxtj4w9sVGJl
XjS8U2TweIqpUN7i0NyOfZv/AFZvh/aX1jG3o1zFX9gJ/wAPRQOZrAkGGyvnX1W2lIP7QP8AB0/7
e+cfxsy2SpcFnN7ZHqrPVsiQ0WH7w2ZvDpqqrZ5CF+3oavf+HwuDr6hWYBkgq5GGoX+o9tyct7xE
jSw26zxjiYXSYD7RGSw/MdOxczbVIyxS3RglPBZkeGv2GQAE/YejaU9XHNBBUwOs9LVxR1FJVQSr
PTVMEyh4p6WojZ4aiCVCCroWVgbgkeyPIYg4YcfXo6LMwDgageHz6lxz82tY/wBf9bn/AG5t711U
1A7AK9SBKWUahbnixN7EWPvTLU4x14E6uGKddqxUDgkfi9vTx9fqfdCtBWvSmuoYPXIuSPooNvz9
Rf8A1j7s1KYp1vrvyEEDSeb/AOxNr2F/x7pWlacOvEV+3rvXyCEP0s1+LX/3q3uwbSKEdaAPmeuM
t7qeP9tz/wAiPuhNTXq3WEseCw4+tx9OT/vHu6DBPTbJ6dQ5z6dSj8i35+pte1x7cr88deBNdJ6i
CQ2+gv8An3UEH7evMBxY464lmP1FiPx/yP3fqwp5dclJUD8X/H4P/Ffdemm+I9cywseOTx/vv9b3
vpkRmta5+3rHq/w08c/Xn/X/AAP9b3rpzrq/9eP9j/xW3vVa/hPXuutS/wBf9vx/vfu3VtLenXtY
C6hzf6Afn/D3oE0rSnXtJrTrryDgEWt+OTz/AFv7dDAClOraaBs9e8oFyRcHgah/t739t1oa6a9N
jPDrCXBAso+vJ4sLf7379Vq1KdKPz64iQD9V+f6WsP8Abfge/AMSe3poofLh17Xf6Bub/wC2/wBf
6G/vRJDU0mnW1Wh4jrjrAP04/r9P+I92A4enVyKr8WfTrqZ2CgBV5P8AvubcfX3sNimKdNoATWue
o4JbkAA/4n1D+h4B966dIIJB6zB2+jH/AGI/1/8AWHvZ00wM9NFPQ9Y31MxYW1X/ANbgqRbixHPt
oqeIOenBgU65ITcX4b0gj/X+vP0492BOQcN1uppSuOsguPTcHjkfU8f0HvQB4H9vVTpw3XRj1G4N
iLa+Pr+PeioNCOtM4UVPDrwJBJBtc3/1v94928yeq6zWvl1lAJsSxPH0/wBf+vPvfWmZvKlevMDJ
/ha3Nuf9a/Atz7qpLeXWhXIbu6acihZ1cfhAv+2LH/b+r3VxnpxDjpr906c697917r3v3Xuve/de
697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3
v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/d
e697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r
3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/
de697917r3v3Xuve/de697917r//0BdcsXX/AFv6/wBLlR9LW594j9Zcg0yOuagswVfUxIAHFyT6
ktf6kk+/dbIoSOq5O3PkrvDtbcmJ6h6BqMzjcHunObj2zJ2BtKrxadk9irtOSSj3f/oMbIrV7f2j
sHb+UibH5rsbO+PHUVQJKfFwVtaEBGm27Hb2EUu4buFMkaq3hsD4cevKePSjPIw7kt0qzChcoteg
TuO93O4SJt20lljdmXxEI8WTT8fgVqqRqRpe4eiqahAzdKHrX4MU33VLuTtfcFVi8lG/kGzOq90b
g+6njVrRt2J8hc/GvevaObqFH+UtHkMJh0vopqFI731ec0EK8O3whk/jlVcf807df0Ih6drv5lz0
5Z8qAgTX8xV/4Imap+clw368pPnRkTyVQOjYUnx16IhiEUnVO0Mkw/5S9w0dTubJSWW2qTK7krMt
lZXB+paYm/P19kh3jdeIv5F+SnSP2KAP5dHR2falI/xCNv8ATDUf2sSf59I/e/w/6S3vi2x1Ljdz
7AlXU0FVsHdWWxlCjuCA1bs7My5/r7OU6Nz4K7E1EZ5Fhf2rteYdytXLl0lHpIgJ/J10yKfmrg9I
7vl3bbhNAR4fQxsQPzRi0bD5MhHRJtz7C+QPwokn7J2huLb+S68xVfjKHNSwVG5cV0/ntv19S0Mk
3b/UFBT56j6IzGNZ1Yb42Rbb0Erf7k8PT00jSxiaC62nmQCynidbtgSB2mVWH++pTpM4P++Zv1CP
gkLChDU9ruvLZN7DMjWikAkahEyk/wCiwjUICP8Af0P6YPxxqDUWWdJ917W7u2xV5rBxVOFz238l
/AN9bIytVjKrP7I3ItNDWpjcjNiaqsxuSxuVx1RFXYrJ0kstDlsbPFU07lHIUH7jts23TrHKdULr
qRwCFda0qKgEEHtZSAVYEHoXbduUG4xM0YKyo1HQkFkbjQkEggjKsMMpBHQ2RNewP5+n9L3/AD9e
PZb0v7tX9HqZHcG4S+kHj8g/Qe6vUgADpQDoAI6mCeJVIMQJNr3HJsLn+luPbRUg9PagR3DPXUsk
ZZbJwfpxx9P94/43791ViCTQY6xsEt9PUfowH/E/63vR1VFOHWusDfgH1Dn62+v0+lvp7uADUk9W
DgA1FesL3+o+h/V9P8P6/n3fSR8J601Ce0dRpl9PIP1FiDyf8VIufduIo2OqU8uPUMqD+rk/1Goe
6hWBycdUNV4cOujcKRbVf/Wup+l+PqR70JB58eq17q9YgpvY6iOePyL/ANPpbn3snUAVPV9Yp8+u
/SF4uxA/2w/3ge9BWByK9a01OR29cfr+f97/AOII93xXHHrzLwoOuGlVI+v1/H1PPvfVzwPXPj82
v9Db63/wtz7qK1Pp00CQMdd6Qfxc/wCtc+7dbDZzw6xMrX+n+vz+fz9be/dODSVYUweu3TjgD+hF
+ef9449+6bAFfOvWJbW0m/1/H1P5IJBFuffiAePTnz646QDfkW/2Nrf6/vQFBQdaoaUrnrmACP8A
E/4f7a/09+IB49UIK5r1xCgm1yLD8Dn/AG5vxb3sUpjh1YgnSR1wlBKLf6huLsD9frfjj3U0xqPV
Vyak9YT/AENzfj8fn/WsPe6g1HV9QpWvXMaQPp/rX5Fv8QR9fegtOBPVe89dm1/x/vH/ABHHu3Ve
4evXZUjm3+9e9daqTxPXgbfkgf4f8j9+611yOkcg/U+oA/X/AF/dda+vXhqI7uPXf7f++1e7A1AP
Xuu0P1H0A+g/p/X37r3XL3pa0qePVgAa+vUCrW9/em6suOmRhYke2z07117917r3v3Xuve/de697
917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3X
uve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de69
7917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3
Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de6
97917r3v3Xuve/de697917r/0RclAV1PDCw5W45IHB/wv7xH6y5FT5dET+bXbsG3sJt/p7HZ/O4r
Kb9jbOb2g2ezRb0yHVNHlaLa02y9oVyAvi939zb6z+L2rjqhCstLFWVlUGQUzN7FfK+3NNLPuTwo
0cXahfKCUgtrceaQxq0rDzIVfxdBbmrclhig29JXWWUVk0fGYgQuhD5PNIyxKfIFm/D0JvSXWezf
jH1TkN89hU+yNjbnh2fRVnae48a7Q7X2Ttfbsc02C612xWVLTSUnX3XFFUJQ0UEIByVaslbKs1ZV
s7JNzvrjfr9LSyMssHiEQqfidm+KRgOMkh7mJ+EUUUVadKtssbfYrCS7vhFFP4YMrA9qKtSsanyj
jHaAPiNWNWavTR0b88vjh3tV7hocHu2bY9dgitfj6PtaOj6+k3fs+rmanxG+9pyZyrp6XJ7eytTH
IiJ5BVwlLyxKGB9v7nynvWz+A0tv4qvg+FWTQ4FTG+kVDDFcUPkek+183bJuzTLFP4TLkCWketDw
dNRoVOfOo8x1K3v84+mdid59RdHSZDHbim7bpqyph7DwO9tk1Gw9kCjlr4jBu/Itly1FLUfYXQBh
cSJ/X3uz5X3S62rcNyCMgtyP02R/EetPgFM0rn8+vXnNG1226bftetXNwK+IrpoTj8Zrjh/Po3+F
zmD3FQRZfbmbw24cVPJLDFlcBlKDNYuWWnYJUQR5DGVFVSSTQSel1DlkY2IHsikjkhPhyxMkg8mB
B/Yc9H0UsM8YeKZXT1Uhh+0GnTyywzRSwVEUVRTVME1LU09RFHUU1RS1EbwVFPUU8yvDU01RC5SS
N1ZHQlWBBI90BKkFSQQainkfXrVA1VZaqfLyNeIP29VGdj4OH4Id84PtfbGCq6DpHOUq0NRSbVp5
Ptsf1niaSrrOwusdyY1WnfIU/UsdQ++dlVZU1NPiqfMYVX+3jpI45As5DzRtclhPIDuSmtWOTITS
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
5uL7d72QL4krySMVQVPEkgKo4UX0GB0PLW2sNlsYWcRxJHEoZzQeQqWY8ST6mpPQjY7sbYWV3FSb
Ppd2Ys7tyGBfdGN2vVyTYrcOT21FKsFRnsXh8tBQ1+VxFLM6rLPTxyJCWAcrce0rWtykTXDQN4Ab
SWwVDfwkioB9AePSpby1eVbdJl+oK6gpwxX+IA0JHqRw6TlJ3l1BW74m6zpOw9vzdi02Bqt0z7H1
V8e6ItuUUflqs22Hmoo6o45IuRIFIk/saj7ebbb9bcXZtW+kLadeNOo+Va8f8Hn02u6bc1ybMXSf
VhdWjOrSPOlOH+odS9l91dT9i7p3RsjY2/8Abm595bJWJ947VxdTO2c2ws9R9pCM5j6mCnnx8stS
dARwH1fj3S4sL20hhuLm1dLeT4WPwt54Pn1u33Gxuppre2ule4j+NR8S1/iHEdd7g7s6j2rhF3Pu
bsbau3dsNVvj4tz5vIfw3bFTXI9REaCj3JVRRYSvrJJqSSOOKCokkmkjZIwzgj36Lbr6d/Bhs3ea
ldIFWA9SoyBnzAp59amv9uhi8ea7jSGtNRNFr6Bj2k8cAmvl0pM9vzZ22K/buJz24sXjMzu6Wph2
phJ5mmz25ZKGmNbkFwWBpUqMxlI8dSAy1DwwOlPH6pCo90itZ50lkiiJjipqPktTQaicCp4VOfLr
ctxBA8ccsyrJIe1fxNQVOkDJoONBjz6lbV3ftjfGLkze0c/i9x4iPJ5XCVNdiqkVENLmsDWy43OY
atSyzUWWw+RgeCqpplSeCVSrqDx7rPbTWsgiuIyj0BocVDCoPzBGQRgjq0E8NyniQSh0qRg8CDQg
+hBwQcjp8mHH9fr7YY16VAU6Zqgc3/33++59tHqw6i+9db697917r3v3Xuve/de697917r3v3Xuv
e/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de6979
17r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xu
ve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697
917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3X
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
HjWU34J9tbwDZ8l8t2C11zu8zDzPGn7dY/Z0/sx+t505l3Bm/SgRIQf2av8Ajhr9vQDfy7tyJ2Rv
f+aH8mcnumHa+A31uzI7aw+/by1EG36Fzvutoc9E8atNUDDY6uxU6iP1Eqthcr7Mua4jaW/JuzpB
rljQMU9T2Aj8yGHRbynL9XPznvDTBIZXKh/4R3kN+QKnpvzvfvyw6h2rsH4zfO74pYbNdAZ3Mde9
NL3L1rWCSKaXD5nCx7N3Gj0tZuHbcuU+5wlPVGnlgxFTUaHMaxyXT27FtmybhNdbzy1vLLuarJL4
Ug9Qda8FancRWrAedRnrcm7b5YQW2y8zbIrbYzJF4sZ9CNDYLLXANKKT5UOOhU+HmZ7I7f8Anr86
O+8vt2m3rV9Wbtrfj517RZreEm16TYe16Xcudiq6HAUj7a3Ckb5Ci2pCZtAgbXVVDOZDM1ke/R2m
38tcubZFIYxMnjPRNRdioyx1LwLGnHgKUp0q2KS83HmfmXdHiEjQyGCMF9IRQzYXtbiFFeHE8a9H
k+I3UPY3VOZ+Utb2Hk9rzS9r/Izcfa2C27tLJ5jMUO0cfunD4uobGV+QyuBwEU+dqKb7Z6v7WOSA
uurUGYqoa32+tdwj2VbSN/0bRYyzAAsVJyAGbtBrStD/AIej/Y7C7sn3lrp0Jnu2kCqSQoYDBJVe
4ilaY6OFKLD/AG3sOlSOPQkrWvTPUD6/77/ffT3U9W6he9dW697917r3v3Xuve/de697917r3v3X
uve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de69
7917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3
Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de6
97917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v
3Xuve/de6//UFmZTa/0+vpbj8f4e8Q3YMlK8OswFINSB1Vn3Pksv8bflLP2tDhpslsDehxfcmcmp
kaSfFw7W25T9PfIWmp4kSRp6iHrvOYHd4RRqlj29U8HSWA+2qOPfOXxt5lpdx1hX56mM1ufzkWSH
PAyL606j/dGfZN/a/WItaS0mYjyCqIbgD1pGY5v+bbdWPbxy9PS9f7t3DQ7k/hNJBsjcGdx278Sa
WtFBAmAqsjjdxYwTU2Qo61Y1EdRDrhmjkFrowNiC7WPxLy1gaDU/iqpQ1FTqAKnII8wcgj16GV3I
Es7mZJ9K+EzBxQ0GkkMKgg+oqCD6HqqP41fJv5U7x3L1/BurdUu6cpmvh/2L2jgtlj+Fyw9k9xYL
N5el29jt3Cl662nV7Hy+mCaIYanrp9UWOSQ1DFnDyLvmx7Bb296be2EcablHEz5/ShZQWKVkfWOH
eVGWIpwpHey73zDcT2SXNwZHfbZJVTB8WZWOkPSNNB4jQGOFB1caiP0b3Z392TtLtKHbvbe9uyMk
nxZm7Ayu5K/rbDbPzXS3ylJyDDpbbOLm2tQY/JwrTUcivjq6HJVNMkKOZz9yoCTdNs2iznsDNt0U
MX1/hhRIXWa1x+sx1kg5wylQa0046V7Xum7X1tuCQ7lLPILAyFjGqNBdZ/RUFADgfCwYigNe7pzw
HyL7D3btb5Gby6y7r3JmtqbC+MvT1Ttveeb6pyGXwm1O/MzDlV7KnfA4DYtDuXP5XGUeOpZchTU9
NW02LlrZJGgaKMRrWXZrS3n2a1v9rRbia+m1IsoDNAKeF3NIVUGpCkkFqAaqnrcO83lxbbzdWO5u
1vDYw6XaIkLOQfE7Vj1MRQFgAwQtWlBQB9lPk13vJ8SOl980/bW6dub6zfyI3H11mt9Z7H7VoKHd
ex8VjNxySbhotxU3Vecx8+zaaaipTQZ1ds0s9Vcxy09/V7Xx7JtY5h3O1O3xvapZrIsaliUcle0q
ZQdeTqTxSBxDdI5d73U8vbXdLuDpcteNG0jBAHQBu4N4TDQKDS/hgngV8+hU+Tve+CpPip0zicpu
HPdl7i7NwezOw5p6nbY2zuXsHEdf5HAbggOY2pBCv93H7P7TbAbbSn8aKJMrJpX9tkBfsm1ytv26
SJCkEMDvGO7UsZkDLhvxeFF4khPogrxHSzet1iTY9tjeZp5Z0SSpXS0gjKtlPw+JJ4cYFPxGnDo8
3xm6xrel+j+uuuMxVLX7lxOHmyW9cig9GR37uzJV+7N71qWLAxzbpzlVoN+UA9hveL1Nz3G8vI10
ws1EHoiAIg/3kDoUbLYHbNqs7SVqzKtXPq7Es5/3onow1TFU1FBPT0VdJjKqWnKQZCCnpKqeile2
meKnr6epopnQjhZY3Q/kH2UKVDAsupfTOf2Z6NCpZW0yEE+dAf8ADUftHRDe5P5fO0O++3ute7+y
e7e5a/fPUNTh6zr0YuDqrGbcwVRhM8m5qSQ4BetKilyBmzMayz/cNL5lUIbKAPYpsOaJtusbvbrT
b4Bbzgh6+IWNV0nu8TGMCnDoNbhyvb7nfWm43e43BuYCClPDCrRtQ7fDznJrx6OrBh9zRYiooZt/
5ipy0lRHNFuSTb2zI66lRAA8CY2DARYGZJmUktJTM4J4IHsgLQBg4tlCU+HU9D+eqv8APo/8OYoR
9UTJX4qJUfKmnT+0dFf6R+HmH+Pu5u5939fdu9mNuTvndz7637ldyY3rDMTS7parytcuQw8Y2BSR
Y2miqM3UlKUiWnXWPT6R7Mtx5gfdIbC3urCHwbZNCBTIO2gFD3mvAZweijb+X02mW/uLa/m8a5fW
5YRnuqTUdgpxOMjrv49/C3rz467T7L2Dhd1by7A2T3Bntz7m7E272TTbKyy7ky+8MVFhc81XksJt
Tb2S/h9bj4tJpvIYgXcixY+9brzBd7tPZ3LwxxXNuqrG0ZcaQhqKBmYVr5/Z6dU2zYLbaoL22jmk
ltZ3ZnWTQdRYUNSqqaEeXDj69PXS/wAWcR0P1/8A6G9mdi73qOmKXMZ2vwexsvT7eq8lgsNuTI1G
VymyYN8DGruCt2jNX1k5VJAMgsU7xmrZTxTcN7k3K5+vuLSMbgVALgsAxUUD6K6Q1AP6NRXT05t+
yxbdanb7e6k+gDEqh0kgMSSmumorUn+lQ01dGdIhigiigijhhgEMMNPCgip4YYVWOKCKJAqRwwxq
FVVsFUADgeycsxrVq16PEqlFHCnRbdp/GfZPXm5N4b965yGV2n2R2Furc26ewt6PDRbgqN/T7lyr
ZYYjdGKyifY1GF2w4SLDLTGlqMdErqkx+4qfKaz7zc3cVva3cayWcSKqJldGkUqpGat+OtQxpUYF
CuHZre0nmubJmS6ldmkfDa9RrRgcUXglKFR55NVpi+pqEb5xfZ28c/ld+b52/i8nhdn12ThocTt7
Y1DnYooNwts7auLjFHj8puGnp44qzI1UtdkZKdBAk8cBaJmnv2+le0gjWK2ZgWAJLORw1sckLxCg
Ba5oTnpRHYqblby4laW5RSFJACoG+LQowC3mxJamKgY6DPb/AMYsbsLtbtPs/qvsDc/XCd3VeNzX
aGycXhtqZrbOX3djIain/vvts5zFVVVtHc+VgqpPvpI/uaeqkcymFZPV7Wybu91Y2Vpe2yStbgiN
yWDBT+BqHvUUxWhHCtOkUWzJbXt7d2N28K3JBlQKhUsPxrqHYxrniDxpXrD3v8WNrd9dSZbozPb4
37tXrbccmPn3JjtovtQ57PV1Dm4dyyZTKbr3PtrcWaqa3KZ2nSprGLg1DrY2Qlfets3mbbL6Pcor
SKS7jqFLatKgrpoFVlGFNB6da3LYoNzsZNue5lS0emoLpqxB1VLMrGpYVPr0LeytiVmxdiYTYWK3
nm6mm21gsDtzbeXrMLs4ZLE4jbuPpcXRUwpaLAUeGyEj0VGiyST0zsTdhpPtFcXC3NzJcyW6guzM
wBahLEknLVGT5Hpfb2rWttHapcMQiqqnStQFAAwBQ4HmOi9dBfCnZ/x77U7W7b2h2T2Tn9195ZtM
12UN4rsPIUWYrTmsrnSuO/huzcRWYKmbI5mYmOmmVQgjUWCL7Ndz5gm3SysrG4tIUgtlpHo1ggUC
5q5DGgHH5+vRXtfLtttl7fXsN3M81y1ZNeg1NS2KICBUngeq5PgbtzLd0fO7+YX8hqPNnbeX252N
L11tXNx4uh3DT/Yz57cGJraOfG5F4qeppZNu7Mo+FkjaORkZWKqVYV8ySx7dy1yttbR643i8RhUq
a6VNQRn4nP29BPlmF9y5l5r3RZNEiTaFNAwpqYEUPlpQfy6t76z6L2N1lgt9Y2jjr9xZvtfL5zcX
bW9twvTS7r7Hzu4YamkrqzN1WNpaCmpKKjx1W1Jj6KjigpMfSgJCgJd3Al5uU95JbOxCRwKFiRfh
jC5FAakknLE1LHJ8uh3Z7Xb2cdyikvLOxaV2+KQtUEkilAAaKAAFHDoGPj58Ltr/ABt2jQ7A2L2R
vmt2btvee6N+7ExGex20KuXau5d148YeryFXWrhAd1yYnFSTwUArYxFB91JIyPKI3jMNy5il3e4a
5ntIxctGqOVLDUqmtAK9tTQtTJoBWlQS7bdgh2e3W1trqQ2ySM6Bgh0swpUmndQVC1wKk0Jp059K
fEPAdEdhdw9l7V7R7JzO5O99yU26eypN2UvX2RpshmKOpzNVS/wtKHZWMqMLQ08ufqAsMTlAmhfo
g963DfZtytLC0msolitk0xhdYIBABrVzU9oz1bbthTbrm/vIL2Zprlwz6tBqQSRSiCgFTgdYtpfE
DD7O+QPYHyZoO2eysj2n2Xtui2nuWozGO62qsAuBxqYZKDH4TDQbGpTiEpxgKW5SVjIUJfUXY+9T
b7JPtVttBsYRZwuWWhkDajWpY6zX4j5Y63bbEkO6Xe8LfTG9mUK1RGVoKUAGjHwjz+3opPenx962
+GnX/wAwvlZLXd0dzZju3a2U2727s+ordi0EGfx2/so2KqJqLMYnYUWQ2FgsPU5kTz1dP5xTU0Cg
xuF9nO2btd8w3ew7GUt7eO3cNE9HJUoKjBejk0oAaVJ4joi3TabTl+133e9dxcPcIVlWqCoc0NCE
qiitSRWgHA9BJsz+VDvrC7KwWUk/mI967Mgo8DQZOJsBnsmdmbVo/sUrRBR5Jd94qmrMPhaZtIqo
46OKaOIyLFErBFXXPPNrJcyoOVbaRixHco1sa0yNBILHyyQTSp6QQckXcVrFJ/Wu4RQoPax0KKVw
dYBA9cDzoOrF/g7N3FXfGTr+p703FkN3b4kqt1rQ7qzVFJQZ3cuxINzZOl6/3Fm6acLVLkM9teCn
rFae9Q9NPCZi0pdiE+Y/3cm8XKbdCqW9FqoNVV9I1qPKitUYxUGmOhby09+2z2p3OUvc1ajEULJq
IRj8ytDnNCK56EHvjo8997F3X1pm+yt77Q2NvfCtt7cuI2ZQ7Ggra7FzsjV1NHndw7S3BlKSPJLG
EmEbr+3dV0gm6XbN0G2XMF5HZRyXMb6lLF6A+WFZQaeXSjc9v/edvcWcl5IltIulgmjI88srEV8+
kR8ePixjfjD1nRdR9Z9o79k2TiqvM5DEUm5sV1zl8jj8hnq9sjkakZSm2Vjqit11MjFUqBKqqdP6
VUBZu28vvF619d2UX1LAA6TIAQBQCms0x6dJtq2dNotFsbO+l+nUkgMIyQSak10CufXoMk+Au04/
kwfly/c/cNV3UYJKOPJ1dP1ZPtumx77cbagxtNtk9cpR01HFg2MSaXEoYly5csSqPM052cbCdutx
t3oPEDV1aq6vEqTX/N0hHLFv+9zvZ3G4/eFOJ8PTTTppp0UpTH8+h83j0FtzeO+es+3HylXi+5Oq
KLN4jbXY0GNxc0+QwG5aGpoc9t3dG3o4aLD5fCVoq3mhjjFNLRVN5KeSPXIshZBuc1vbXdiEB2+c
qWjqcMpBVlbJDYoTkEYINBQ2n2yOa5s7/WRfQAhZKD4WBDKy/CQa1AFKHIIyOs+xehtmbM7E3r3J
VCXdncnYFNQ4rcfYubpaOHJQ7bxFNTUmK2dtjHUMUeP2ttWhhpIi0FOGnrJV8tVNO4Ur643K4ntL
fb1olhESVjFaajxZicsxqcnA4KB07a7db293cX7fqbjKAGkIFdI4IoGFXHAZJyxJ6SO3/izsTZ27
O6ty7Qz28NsUPyDzMO5O0Nq4yswy4fJbiWjr6OtymJyMuFk3PghmxkpHraeCuEEzEhVjVmUvy7zc
zwbdDPFG7Wq6Y2INQtRQEV0mlMErUfPpPHslrBPuE9vLIi3TapFBFC2QSDTUtamoDUPy6CHqz+Xf
031J0r2H8f8Abu8u1sh1j2rWxVm9MJmM5tjzVkj1GBOVegymF2lhsnipczjduQ0Mpjm0RU7uYkSU
iQGF7zTfX9/a7rLbwC9gFFIDYHdSoLEGhYnI40rjHRfZ8qbft9hdbVFcTmxnNXBK/KtCFBFQoHHA
4Zz0YrMdHU+9BsnH9mbuyW/9t9e7q2/vjbu26zC4rDQV+69oxTLtPL7zrsYdW6m29PP93DCIqOnl
rkSaZJNAX2Ux7mbf6h7OARTSoUZgSaK3xBAfh1UoTUkCoFOjKbbluDbreXDSwwurqCAKsvwlyPi0
8aUAJoSD0nNsfGLCdd9tdqds9W733LsGo7vrKHN9qbRhxu3dx7YzO7MeaoxbxwKZygnq9rbhrP4h
P95oepo6kyajTqwBD028SXdjZWN5bpKlsCI2qysFNO1tJ7lFBTgR69NQ7Olte3l/Y3DxG5IMi0Vl
LCveuoVVjU14g+nRgcHhKPb2OTGULVs4E09XUV2TrJchlMlX1krT12RyVdMddTWVcrEsQEjRQqRo
kaoilryNJIGagNPLAA8gB5Af8Xno4hiSNRGjEjJNckk8ST6n/YGOp0pPN/8AivtlzXpygGOmmf8A
P+x/3r20erDqF711vr3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve
/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de69791
7r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuv
e/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de6979
17r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r//1RdlBsRe17g/0/3wt7xB
ZcnTwr1mAo0inQC9/wDU1b2/sEYfb+fj2jv7bOdxm9+tN2z05raHBb1wQnWhXO48K/8AFdp7gx9X
UYzMUZDLVY2slQqxsPZnsu5rt14XmhMlnIhSRK0LI3HSfJ1IDofJlB6LN5219xs/Dhk8O7jcSRvS
oV14ah5owJR181Y46KD8e/kRB00Mv1H2jg6DY20djbt/u3VGmzJrIvjfW7hkNfidp9hS5J4Z5ukN
y5isdth7zpzLj0x1VT4zJfa1NOGYU7xszbqItwsJTLdSx6xVafUhcF46cJ1UfrwmjagZE1BugptG
8rtgk26/hEVrFJpwa/TFshJK0/QZj/i8wqukhH0sOrOUlLJEyyiSKojjqIJUkEkFRDIuqKeGWMtF
PDLGQyOpKspBBI9gf1xkYP8As+fQ5B1Cla1yD5H8/Q+vWQyyn1MzEhiWNzfWLXa5+raQLn68e7AA
AU4daNamvHqSszmxEjAqS4sSulnHqYW/Lfk+/AACnl1roL+2u6Nu9NYrG1OXpctuPc+4pJaTZnXu
2WoX3fu+akiaprpqOPI1lFjsNtfCUaNUZXN18tPicTTKZKiZfSrGW3bZNuTuiMqW6CryNXQlcCtA
SzMcKigu5wB0XbhukO2opkVmnfCRpTW9MkitAqqMs7EIoyT0Rv447J3X8iO4JflDvKTCS7Ep9z5D
M4WpoKqrzeL7M3Xtunqts7CGw6jJUtHLB0X0pRVFacVUyRRybm3dUVmaWNYFomAr3i8t9p29djtQ
31RQKagKY1ajSawCf15iF1CtI4gsdSdXQU2i1uN53E71clTahyRQlhIy1VNFQKQw50mlZJS0lKae
rUqd/wBxfrqB5+tiPr/rewScAnzp0NCKGnT/ABcoOT9f94vx9fdVAIKkdOKcU6y38bqQdf1uLC/9
Bxxf3o0UinVzUjHHrskuPqeP8CL/AOsPx72O7JHVKP8AxdYHDLYE/W1rarA2/P1NvbXVwaivXFGc
E/2h/T6Em1/6G3v3WmWvWQa2uNY9X4F7i/8AT3s+p6rRRjSeoZ12IPPJCm1uQSP9Uf8AeffunOuw
hsbheBcX/wCKfj3taahU46q1QR1htJqb1Dkf0PH+t7vTUa/h631xJIuCB6fzzY/8T9Pfjk/0R1Qp
U1r1jZWOkggcWuAf9uOPT79Un5L17UDUHh1iKMLm7G/+uPp/T6Af4+90JNdWOrBl4DptymJx2apH
oM1jaLLUDSxzNRZCnjqaZpYrmGVopQ6+SIsSptcX93jaSJtaSEP6jHVJI4pF0SRgpXzFekrtvqzr
LZ9bJk9o9c7H2nkZpXqJ67bO1sHg6yeokSSOWoqZ8XRUslTUPHM6s8hZyHYX5Pt+a+vZx4dxdyOn
ABmJH8yadJorOztyZLe1jjYmpKqBn50A6XpBKj1f69r2v/hz9Le0/SpTUseuIVh9SfyLD/jf5Hur
aqjT14muAKjrmUJtcHj83/2H4P5v70HJ4L1oMKGvXARm6m5tf+hv9foL/gX9368zcQOPXpII5Vkg
lSOWOWNopopkSWOeKQGOSKWNwY5YpEJDKwIYGx96BYUIND1Q5Gk8Ok1BsPZ1NMZqfaW2aeQLovBg
sbFGqIFARYI6cQIFCi1lFrce3vqLgjSZXI+bH/P02ILYGogQfkP83SpsQCSTb682+n+x5Ptnq7d1
anrFoIFz/Unkn6n8f09+IB49NRha9pPWRV/qAbn/AGN/9t9PfurPVFpXu64sv+1D/WP4H+HPv3Vl
NQCR1jdRfhv94H+9/wCPvfV9WKUx1iZW4F+Ppxf6f4i9iPfurLQj4evFbnTYEfTVb8f0H5t72RTg
etEMBXV15ItNubheef6njj3rrRfJrxPWS3Fvx/h7917VwNM9cxp06T+Pofrz7914Ma16x3I9J444
P9fyPx9SPfvn1s4OriOosx+v+t/xPuhPVgem2bn/AH3+HunVh5dQfeurde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvdf/WFqc8Wvbi/wDxX/bD3iODQMfl1l7JwHUJW5I/xNvryOf9tx7S9PcQG8ug
O7o+PmyO6aH7muNRtHf9BRPRba7S21R447vwcDks+Irkr6Woxu8dm1+pkrcDl4qvF1cbHVEr6XU6
2verrazRCJLQmrRMTob5imUcfhkSjA+fl0S7rslruah3/Tu1FFlUDWo9DXDofxRvVCPKueia0PVH
yy6Qatqtn1dc9DQXeNOjKbbe5urN0xRqDHU5v4rdn5rb9bsDLzqCKr+4u6YKWRrNDRK1x7FZ3Pl/
dii3CLrP+/yyyr8hdRKwkHp48RI4FugsNt5i2rU9sTpH++ArRP8ANrWVlMZ9fAlA9E6a2+dXyI25
PJjNz9I46orYz41myHTnyr2TV1TnhGTGY3YnZeNYyEcCLIyIbEBvz7dHKuyTDxYN1YJ8prWQD/bG
SI/8Z6Zbmve4yEuNrUsPWG6jJ/IRyD9jfn0/Ynuf5nd2RSUm3tn7162xsisGqtjdOnYtfVrLdI0H
aHyezlHBg4GU3+5x20MlVqPUsY49tybbyztZDTXEc7f8Mm8QD/m1bKan5NMo8ierR7lzPugKxW0s
Kf8AC4dBP/N26YaftWJj8ul11j8KsnmM0N1fIrI4PN0YjfT1bg8tuHeP94nNQtRFV959xbteHenb
7QzIJRgoocVtCKf1JjnVUATXvM6xxfT7Mrqf9+kKmn/mhClUh9NZLykfjHSqx5XeSTx95dWX/fSl
n1f815no83roosQPBOrFMfSUlBSUuPx1HSY7G0NPDSUOPx9NBQ0NDSUyLHT0tFSUscVNSUsEahUj
jVUQAAAD2ESzOXMjFmJqSSSST5knJ+09DFESNVWNQEAoABQAegAwB0oKZbaR+Qbf635/4n3rV2/P
r2kenT3AeLXHptf+trf8V9715/o9b6k+/MpJJ8uvdcQbcf4n/e2/4p70raagjr3XJ3DAL/qSpv8A
7G305+l/dWpXHDrQWhr12q8i3IH5It+D+B/h71WnVwpPAdebTe6jkf0/2H4PtwqGyvVesIjHP1+n
5J+v/FPdUANa8OvcOuS2U2sQbEc/Q/4g/X3UgjB6oQxz10ycHi3IsP8AY/0tx7cRq8ePXhpx69RZ
EWxNh9D/AK9+ef8AW93IqKdW4HA6iML3tYfS39R/Xn68+66TUkU63101wPVY2NgeRx9ST/sPdum9
Pmp66Uav02ax+g+vH+8+/A/s61qK/Fw66KflRa39Ta5/2H9ffuvAqa1Oeuh9frYf4i/+8fn37HXq
oBnrlfVw44/2nhr+/daqAME9d6gvC2I/xH+9/QH3oADA6b0Lq1efXtX+0i/+9H/Afj37q3XFmsCS
OeDfm/8Avf59+62BU066uLXvx/xXj37rXXDm4u1/yRa1x/tve+Pl1cCtQqZ66cg20te/HpPH+x97
1Cnw560DpJxnrHdvwfrYe9D+fW1ocEZ68CAfV/xXn/Ye94oPXq+lfTruQDQSCv4/3s/4e9YOOq9p
NKZ6wJZh9bEn8H/X+h/I9+63TSaiteuWj/Fufrz791vUvr1yFx+Sf9fn37rWlTw6yXVuLWP04+l/
+R+9EevVCpHXRQj/AFv6+29B8j1rrgWt78WBwBjrwHUKVr3/AMf+R+/dXHTfJ/xP/Ffej1ccfy6h
n6n/AFz711scB11791vr3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xu
ve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697
917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3X
uve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de69
7917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de6//1xakTUdX4/3ri3vEQ5DL59Ze
6dfdXj1CMRv6b/X+n+P1Htk5NF4dOjAp1mWKQi5A/wBuOf8AH3tRQipp1VmCgZr1mhifSAQbeog/
UAcf0sB9fbrYKnpsMqilMdSYlqEBAmkAN9Ko7AEfmw1ah7tQGlR1oM2aE9ZvC8rEgsPySzXN/wAX
P1+vvYwMcOvfGcDqQlOVNzc3v+DY/p/P+HvasCa0r1plK8epkUVv9b/fcD/be3CwbtHHqvTgt1AP
+2/2P/I/fmUk4GOvdOUUjBB6eRf6fW3+It9QPdNDcaY60KCprjrPra1wRa/P4P8AvH9fbiggZ69q
4H164qxb/WP9L/64J49+YA0qetEmpyOuZLKTZdQ/NyLH/fH3QqKVBx1tWqKnrppD9eLn6i1xb82v
9L+98RwFetj7evCX/H8/0H+2+nutDx69Unjx6yCUAf4e7LivVad1a9cGkUiwsB/h7sxqKdb6681g
eb83H+++o91UU6acVcMOPUeaTVYfj+n+t7vXq64Hy6jagv0/oB/jx+f9f36tetnOOuAa178/6/8A
X/Y+916310r2a9/9v+ffiR1RuFAOuZkFvp+Peq9JtC6q06x6l+v5/wBb378uneutY/x9+z6db/Pr
2se/Z9OvY9evax/T/ff7b3vr2PXrvWD/AMj93UgdbHGoPXEt6ibgD+l+B/re9Me6tevU64lxzb6/
1HvXTgOOsWr35jU1PVCKnHXi/wDsPdfs68ooR10GHP5/3w+n+297+3q7Vz15nFiOBx7cUgCnTYXI
PWG4v78T3V6cqKY6yCT+lrf0H++/HujU4jpnPn13r/31/bFG/iPWwAAB17UPzb/b+3K1FOnan065
CXT/AGv9hf36vTbKCKdYpJNX0/x91bPWwOoLt+fx9B7r1YZ6iOffurDzPUQ/U/6/vXWxw69791vr
3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/
de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917
r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve
/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de69791
7r3v3Xuve/de697917r3v3Xuve/de6//0Bi94iEAih6zB64WS9/+K/8AFPevDHz6rrX16yhyFA0m
w/1r/wC29+MYPwnpinWQEMB/tJBA/wCDflh+f9b3uMdv29WBOkDyHWVGtx9f8ef95/IPtz5jrXUl
Xte1jf8A33+v72p08OvdZdfH1sbXAN/detmvn1zjb6En/bfS/wDvPvYxnrXUxZBxfSB/r8cfj/H2
o611LWf/AFrf71/tre9dVoKU6yibkHg/7D/jfv3Wj5Dy65+b/Yf4f8i91bI4dboPLrgZvdfl17rg
Zf8AEf7D37q3XXl/x/3j/jXv37evde83+P8AvB9+6910Zf8AH37rVPl1xMv+P+297/LqvWMyf76/
v1et/wA+sRf3vr2euJf37rWPXrrWf6e/daPy661/76/v1fn1XT8+utf+t71X59eoPXrrX/j79X59
ex115P8Aave+t0Hp17WP9V/vPv1evY9OutY/r/vfu1T1unXWtf6/7x71U+vXuui4/Hv359bx1xLn
3rr2OuixPvdevV661W+p9+qevZPXHUPe6/Z16h661j36p9evU+fXtY/x91PXvz69rH+PvWevfn11
rHv2evfn10X/AKe/V+fXuuDOT9f9t7r9nXgOsDNf/W96638h1HY/U+9efVuAp1H9+631737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691/9EYveIvWYPXvfuvdcDdRYfQ+9kBhQ9MstPs65ggCx4P++Pv
YxjqvWVH+nNwffuH2de6zBiPp6l/p9f94vz7317rIJAeCQD/ALf/AHj6/T37r3WUOR9Tf/b/AO8f
U+/de6yiT+ht/geP9v8AUfT37r3WVZTf6g/7Hn/ePdgx4da6zCX/AB/24Pu35da65eb/AB/3n3rr
359deX/Ee9ft69+fXXl/x/3j3v8Ab1vr3l/2r/eP+Ne/fkevddeX/av94/4179+XXuveX/H/AH3+
296z6da/LriZP99/vre/dep8uuJk97r178+uBk/x/wB9/sffq/PrWOuJk/x/3n/inv35de+wdda/
8T/vPv35deoeutY/r/vfv35dap11rH9f979+z6da661j3vPW/wA+vax79nr2PXr2se/V+fXqD169
r/33++Hv2fXr1B69da/99/vre/Z8z17HXWs+/V+fXsenXRf/AB/3n3qo639g64l/8ffvy69nrrX7
3+XXs+vXWv8Aw9+r16h8z11r/wBb36vXqD1661/63vVfn16g9eva/wDfc+9Y9evY9eutfv2OvY66
Ln3qvy69jrgW/wCRe/fb17J6xlr+9dWoB1hZr8D37r3z64e/db697917r3v3Xuve/de697917r3v
3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de
697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3
v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/d
e697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r
3v3Xuve/de6//9IX9R/w94j06y81nrvUP8feqdW1j59e1D/H36nXtY+fXK/9ef8AH6kf73x78MCg
x1Vl81GOu9a/1/3g/wDFPduqdcwSOR7917rwYD6g/wCuL/7bjj37r3WUMPwdP+8f8a9+691kEhP5
B/33+w9+6912JP8AX/2I/wClfe6n1PXusnl/1/8Aff7H3vV8h1qnXvN/r/7Ye9db695v9f8A2w9+
x17rvzf42/2A9+6917y/7V/vH/GvfsenXuveX/av94/4179j06917y/4+/fl1rroyf4+/fs61T5d
cfJ/r+/V+fW/y668n+Hvdfn17PXWv36vz619p661n/ff8j9+r9vXqD169r/33Pv2OtY9eva/esde
x69da/fvy6929e1n/fW9+/Lr2PTrrX/j/vXvf5dex6de8n+P+9e/fl178uuvJ/j/AL7/AG3vf5db
/LrrWP8AfX96qevZ9OutY9+r8+vZ661+/V+fXqH1661n/ff74e/VHr16h9eutR96qOt0661f4/71
79X5daoOuOsf6r/e/fq/Idbx6dd6ifz79X5deoOu7n+p96r16g9OvXPvdT16nXXvXW+sbk3t/h79
1rrH791vr3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917
r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve
/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de69791
7r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuv
e/de697917r3v3Xuve/de697917r3v3Xuve/de697917r3v3Xuv/0xd94kdZc9e9+691737r3Xvf
uvddfQckf6/09+691yuf6n/bn37r3Xeo/wC+Lf8AFffuvde1f7Sv+29+691y8n+H+8/8a9+691x8
h/o3+3T/AIp7917rl5D/ALV/yW3v3XuveT/An/XYn/e/fuvdYvK34F/9b/ja+/de6zCU/m/+wP8A
xHv3XuuXmP8Aj/th7917r3mP+P8Ath7917r3m/1/9sPfuvde83+J/wBsPfutU668v+Lf77/Y+/V6
317yf8G/33+x9+r1qg9OuvIP8f8Aff7H36p6917yD+h97qfXr2eveQf0PvVfn17PXvIP6H36vz69
nr3kH9D79X59ez17yD+h9+r8+vZ668n+Hv359e695P8AD/effuvddFz+AP8Ae/fut9e1n/D37rX5
9da29+691xDuD9Db/XHv3XuvGS//ACNf+K+/dep11r/xP/JS/wDR3v1evUHp11qH++K/8V9+631y
9+6917/Yt/yU3/Fffuvde5/q3/JTf8V9+6917n+rf8lN/wAV9+6917n+rf8AJTf8V9+6917/AGJP
+uSf979+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvdf/1Bd94kdZc9e9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvdf//VF33iR1lz1737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691//9YXfeJHWXPXvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3X//1xd94kdZc9e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvdf//QF33iR1lz
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691//9EXfeJHWXPXvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3X//0hd94kdZc9e9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvdf//TF33iR1lz1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691//9QX
feJHWXPXvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X//1Rd94kdZc9e9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvdf//WF33iR1lz1737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691//9cXfeJHWXPXvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3X//0Bd94kdZc9e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvdf//RF33iR1lz1737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691//9IXfeJHWXPXvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3X//0xd94kdZc9e9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvdf//UF33iR1lz1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691//9UXfeJH
WXPXvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X//1hd94kdZc9e9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvdf//XF33iR1lz1737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691//9AXfeJHWXPXvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X//
0Rd94kdZc9e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvdf//SF33iR1lz1737r3Xv
fuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6
91737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3X
vfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+
691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3
Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691//9MXfeJHWXPXvfuvde9+691737r3Xvfuvde9
+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r
3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde
9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737
r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvd
e9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3X//1Bd94kdZc9e9+691737r3Xvfuvde9+691737r3Xvfuvde9+69173
7r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuv
de9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+6917
37r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfu
vde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691
737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvf
uvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+69
1737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xvfuvde9+691737r3Xv
fuvdf//Z')
	#endregion
	$tabpageAbout.BackgroundImageLayout = 'None'
	$tabpageAbout.Location = '4, 24'
	$tabpageAbout.Name = 'tabpageAbout'
	$tabpageAbout.Padding = '3, 3, 3, 3'
	$tabpageAbout.Size = '326, 300'
	$tabpageAbout.TabIndex = 3
	$tabpageAbout.Text = 'About'
	#
	# linklabelWebsite
	#
	$linklabelWebsite.BackColor = 'Transparent'
	$linklabelWebsite.Location = '58, 118'
	$linklabelWebsite.Name = 'linklabelWebsite'
	$linklabelWebsite.Size = '172, 23'
	$linklabelWebsite.TabIndex = 4
	$linklabelWebsite.TabStop = $True
	$linklabelWebsite.Text = 'https://www.scriptinghouse.com/'
	$linklabelWebsite.add_LinkClicked($linklabelWebsite_LinkClicked)
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($richtextboxChangedHistory)
	$groupbox1.Anchor = 'Top, Left, Right'
	$groupbox1.BackColor = 'Transparent'
	$groupbox1.BackgroundImageLayout = 'None'
	$groupbox1.Font = 'Microsoft Sans Serif, 8.25pt'
	$groupbox1.ForeColor = 'ControlText'
	$groupbox1.Location = '6, 153'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Size = '310, 141'
	$groupbox1.TabIndex = 3
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'Change History:'
	#
	# richtextboxChangedHistory
	#
	$richtextboxChangedHistory.Anchor = 'Top, Left, Right'
	$richtextboxChangedHistory.BackColor = '172, 131, 99'
	$richtextboxChangedHistory.BorderStyle = 'None'
	$richtextboxChangedHistory.Font = 'Microsoft Sans Serif, 8.25pt'
	$richtextboxChangedHistory.Location = '6, 19'
	$richtextboxChangedHistory.Name = 'richtextboxChangedHistory'
	$richtextboxChangedHistory.Size = '298, 116'
	$richtextboxChangedHistory.TabIndex = 2
	$richtextboxChangedHistory.Text = 'Version 1.0 : 16.Mar.2022 : Initial Release'
	#
	# labelAuthorPhyoWaiPaingLa
	#
	$labelAuthorPhyoWaiPaingLa.AutoSize = $True
	$labelAuthorPhyoWaiPaingLa.BackColor = 'Transparent'
	$labelAuthorPhyoWaiPaingLa.Font = 'Microsoft Sans Serif, 8.25pt'
	$labelAuthorPhyoWaiPaingLa.Location = '11, 81'
	$labelAuthorPhyoWaiPaingLa.Name = 'labelAuthorPhyoWaiPaingLa'
	$labelAuthorPhyoWaiPaingLa.Size = '167, 52'
	$labelAuthorPhyoWaiPaingLa.TabIndex = 1
	$labelAuthorPhyoWaiPaingLa.Text = 'Author: Phyo Wai Paing
Last Released Date: 16.Mar.2022
Version : 1.0
Website: '
	#
	# buttonStop
	#
	$buttonStop.Anchor = 'Top, Left, Right'
	$buttonStop.Cursor = 'Hand'
	$buttonStop.Font = 'Microsoft Sans Serif, 8pt'
	$buttonStop.Location = '135, 344'
	$buttonStop.Margin = '0, 0, 0, 0'
	$buttonStop.MaximumSize = '70, 23'
	$buttonStop.MinimumSize = '35, 0'
	$buttonStop.Name = 'buttonStop'
	$buttonStop.Size = '70, 23'
	$buttonStop.TabIndex = 14
	$buttonStop.Text = 'Stop'
	$buttonStop.UseVisualStyleBackColor = $True
	$buttonStop.add_Click($buttonStop_Click)
	#
	# buttonStart
	#
	$buttonStart.Anchor = 'Top, Left, Right'
	$buttonStart.BackColor = 'Control'
	$buttonStart.Cursor = 'Hand'
	$buttonStart.FlatAppearance.BorderSize = 0
	$buttonStart.FlatAppearance.MouseDownBackColor = 'White'
	$buttonStart.FlatAppearance.MouseOverBackColor = 'White'
	$buttonStart.Font = 'Microsoft Sans Serif, 8pt'
	$buttonStart.Location = '21, 344'
	$buttonStart.Margin = '0, 0, 0, 0'
	$buttonStart.MaximumSize = '70, 23'
	$buttonStart.MinimumSize = '35, 0'
	$buttonStart.Name = 'buttonStart'
	$buttonStart.Size = '70, 23'
	$buttonStart.TabIndex = 13
	$buttonStart.Text = 'Start
'
	$buttonStart.UseVisualStyleBackColor = $True
	$buttonStart.add_Click($buttonStart_Click)
	#
	# tooltip1
	#
	$tooltip1.AutoPopDelay = 10000
	$tooltip1.InitialDelay = 500
	$tooltip1.ReshowDelay = 100
	#
	# toolstripstatus1
	#
	$toolstripstatus1.Name = 'toolstripstatus1'
	$toolstripstatus1.Size = '0, 17'
	#
	# labelUnstableEnterTextToS
	#
	$labelUnstableEnterTextToS.Location = '0, 0'
	$labelUnstableEnterTextToS.Name = 'labelUnstableEnterTextToS'
	$labelUnstableEnterTextToS.Size = '100, 23'
	$labelUnstableEnterTextToS.TabIndex = 0
	$labelUnstableEnterTextToS.Text = 'Unstable: Enter text to speak'
	#
	# buttonTestPlay
	#
	$buttonTestPlay.Location = '0, 0'
	$buttonTestPlay.Name = 'buttonTestPlay'
	$buttonTestPlay.Size = '75, 23'
	$buttonTestPlay.TabIndex = 0
	$buttonTestPlay.Text = 'Test Play'
	#
	# notifyicon1
	#
	$notifyicon1.Text = 'notifyicon'
	$notifyicon1.Visible = $True
	#
	# savefiledialogExport
	#
	$savefiledialogExport.add_FileOk($savefiledialogExport_FileOk)
	$groupbox1.ResumeLayout()
	$tabpageAbout.ResumeLayout()
	$groupboxPopup.ResumeLayout()
	$tabpageNotify.ResumeLayout()
	$groupboxVoice.ResumeLayout()
	$tabpageVoice.ResumeLayout()
	$groupboxEndpoint.ResumeLayout()
	$groupboxLogging.ResumeLayout()
	$tabpageEndpoint.ResumeLayout()
	$tabcontrol1.ResumeLayout()
	$toolstripstatus.ResumeLayout()
	$formNetworkConnectivityN.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formNetworkConnectivityN.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formNetworkConnectivityN.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formNetworkConnectivityN.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formNetworkConnectivityN.ShowDialog()

} #End Function

#Call the form
Show-Internet_Connection_Notify_v1_0_psf | Out-Null
